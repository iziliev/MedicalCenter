// <auto-generated />
using System;
using MedicalCenter.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MedicalCenter.Infrastructure.Migrations
{
    [DbContext(typeof(MedicalCenterDbContext))]
    [Migration("20221118161010_Inicialise")]
    partial class Inicialise
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MedicalCenter.Infrastructure.Data.Models.Examination", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("DoctorFullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DoctorId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DoctorPhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hour")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUserReviewedExamination")
                        .HasColumnType("bit");

                    b.Property<string>("ReviewId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("SheduleId")
                        .HasColumnType("int");

                    b.Property<int>("SpecialityId")
                        .HasColumnType("int");

                    b.Property<string>("UserFullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserPhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DoctorId");

                    b.HasIndex("ReviewId");

                    b.HasIndex("SheduleId");

                    b.HasIndex("UserId");

                    b.ToTable("Examinations");
                });

            modelBuilder.Entity("MedicalCenter.Infrastructure.Data.Models.Gender", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Genders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Мъж"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Жена"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Не посочвам"
                        });
                });

            modelBuilder.Entity("MedicalCenter.Infrastructure.Data.Models.Review", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DoctorId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("DoctorId");

                    b.HasIndex("UserId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("MedicalCenter.Infrastructure.Data.Models.Shedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Shedules");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Първа смяна"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Втора смена"
                        });
                });

            modelBuilder.Entity("MedicalCenter.Infrastructure.Data.Models.Specialty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Specialties");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Акушер-гинеколог"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Алерголог"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Алтернативна медицина"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Ангиолог"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Анестезиолог"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Боуен терапевт"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Вирусолог"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Вътрешни болести"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Гастроентеролог"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Гръден хирург"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Дерматолог"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Детски гастроентеролог"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Детски ендокринолог"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Детски кардиолог"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Детски невролог"
                        },
                        new
                        {
                            Id = 16,
                            Name = "Детски нефролог"
                        },
                        new
                        {
                            Id = 17,
                            Name = "Детски психиатър"
                        },
                        new
                        {
                            Id = 18,
                            Name = "Детски пулмолог"
                        },
                        new
                        {
                            Id = 19,
                            Name = "Детски ревматолог"
                        },
                        new
                        {
                            Id = 20,
                            Name = "Детски хематолог"
                        },
                        new
                        {
                            Id = 21,
                            Name = "Детски хирург"
                        },
                        new
                        {
                            Id = 22,
                            Name = "Диетолог"
                        },
                        new
                        {
                            Id = 23,
                            Name = "Ендодонт"
                        },
                        new
                        {
                            Id = 24,
                            Name = "Ендокринолог"
                        },
                        new
                        {
                            Id = 25,
                            Name = "Естетичен дерматолог"
                        },
                        new
                        {
                            Id = 26,
                            Name = "Зъболекар (Стоматолог)"
                        },
                        new
                        {
                            Id = 27,
                            Name = "Изследване"
                        },
                        new
                        {
                            Id = 28,
                            Name = "Имплантолог"
                        },
                        new
                        {
                            Id = 29,
                            Name = "Имунолог"
                        },
                        new
                        {
                            Id = 30,
                            Name = "Инфекциозни болести"
                        },
                        new
                        {
                            Id = 31,
                            Name = "Кардиолог"
                        },
                        new
                        {
                            Id = 32,
                            Name = "Кардиохирург"
                        },
                        new
                        {
                            Id = 33,
                            Name = "Кинезитерапевт"
                        },
                        new
                        {
                            Id = 34,
                            Name = "Клинична лаборатория"
                        },
                        new
                        {
                            Id = 35,
                            Name = "Коуч"
                        },
                        new
                        {
                            Id = 36,
                            Name = "Лицево-челюстен хирург"
                        },
                        new
                        {
                            Id = 37,
                            Name = "Логопед"
                        },
                        new
                        {
                            Id = 38,
                            Name = "Лъчетерапевт"
                        },
                        new
                        {
                            Id = 39,
                            Name = "Мамолог"
                        },
                        new
                        {
                            Id = 40,
                            Name = "Манипулация"
                        },
                        new
                        {
                            Id = 41,
                            Name = "Медицинска генетика"
                        },
                        new
                        {
                            Id = 42,
                            Name = "Медицинска сестра"
                        },
                        new
                        {
                            Id = 43,
                            Name = "Микробиолог"
                        },
                        new
                        {
                            Id = 44,
                            Name = "Невролог"
                        },
                        new
                        {
                            Id = 45,
                            Name = "Неврохирург"
                        },
                        new
                        {
                            Id = 46,
                            Name = "Неонатолог"
                        },
                        new
                        {
                            Id = 47,
                            Name = "Нефролог (Бъбречни болести)"
                        },
                        new
                        {
                            Id = 48,
                            Name = "Образна диагностика"
                        },
                        new
                        {
                            Id = 49,
                            Name = "бщопрактикуващ лекар"
                        },
                        new
                        {
                            Id = 50,
                            Name = "Озонотерапевт"
                        },
                        new
                        {
                            Id = 51,
                            Name = "Онколог"
                        },
                        new
                        {
                            Id = 52,
                            Name = "Оптометрист (Очен оптик)"
                        },
                        new
                        {
                            Id = 53,
                            Name = "Орален хирург"
                        },
                        new
                        {
                            Id = 54,
                            Name = "Ортодонт"
                        },
                        new
                        {
                            Id = 55,
                            Name = "Ортопед"
                        },
                        new
                        {
                            Id = 56,
                            Name = "Отоневролог"
                        },
                        new
                        {
                            Id = 57,
                            Name = "Офталмолог (Очен лекар)"
                        },
                        new
                        {
                            Id = 58,
                            Name = "Паразитолог"
                        },
                        new
                        {
                            Id = 59,
                            Name = "Пародонтолог"
                        },
                        new
                        {
                            Id = 60,
                            Name = "Педиатър"
                        },
                        new
                        {
                            Id = 61,
                            Name = "Пластичен хирург"
                        },
                        new
                        {
                            Id = 62,
                            Name = "Подиатър (Болести на ходилото)"
                        },
                        new
                        {
                            Id = 63,
                            Name = "Протетик"
                        },
                        new
                        {
                            Id = 64,
                            Name = "Профилактични прегледи"
                        },
                        new
                        {
                            Id = 65,
                            Name = "Психиатър"
                        },
                        new
                        {
                            Id = 66,
                            Name = "Психолог"
                        },
                        new
                        {
                            Id = 67,
                            Name = "Психотерапевт"
                        },
                        new
                        {
                            Id = 68,
                            Name = "Пулмолог (Белодробни болести)"
                        },
                        new
                        {
                            Id = 69,
                            Name = "Ревматолог"
                        },
                        new
                        {
                            Id = 70,
                            Name = "Репродуктивна медицина"
                        },
                        new
                        {
                            Id = 71,
                            Name = "Рехабилитатор"
                        },
                        new
                        {
                            Id = 72,
                            Name = "Спортна медицина"
                        },
                        new
                        {
                            Id = 73,
                            Name = "Съдов хирург"
                        },
                        new
                        {
                            Id = 74,
                            Name = "Токсиколог"
                        },
                        new
                        {
                            Id = 75,
                            Name = "УНГ"
                        },
                        new
                        {
                            Id = 76,
                            Name = "Уролог"
                        },
                        new
                        {
                            Id = 77,
                            Name = "Физиотерапевт"
                        },
                        new
                        {
                            Id = 78,
                            Name = "Хематолог (Клинична хематология)"
                        },
                        new
                        {
                            Id = 79,
                            Name = "Хематолог (Трансфузионна хематология)"
                        },
                        new
                        {
                            Id = 80,
                            Name = "Хирург"
                        },
                        new
                        {
                            Id = 81,
                            Name = "Хомеопат"
                        });
                });

            modelBuilder.Entity("MedicalCenter.Infrastructure.Data.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int>("GenderId")
                        .HasColumnType("int");

                    b.Property<string>("JoinOnDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasDiscriminator<string>("Discriminator").HasValue("User");

                    b.HasData(
                        new
                        {
                            Id = "41cee654-7ba0-479d-84e4-a3f260968091",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "d9a57c3d-b381-4edc-9999-55a2eb83b565",
                            Email = "admin@mc-bg.com",
                            EmailConfirmed = false,
                            FirstName = "Ивайло",
                            GenderId = 1,
                            LastName = "Илиев",
                            LockoutEnabled = false,
                            NormalizedEmail = "ADMIN@MC-BG.COM",
                            NormalizedUserName = "ADMIN",
                            PasswordHash = "AQAAAAEAACcQAAAAEHwc3DZ5Cp/iHyOlAl3WwFIZNq6JXIiFhRLe1H9nmcMUfGh3Pm9FnZVvBIHXlUK6EA==",
                            PhoneNumber = "+359888888888",
                            PhoneNumberConfirmed = false,
                            Role = "Administrator",
                            SecurityStamp = "68429245-b561-4a4d-a98e-3649896d7cb4",
                            TwoFactorEnabled = false,
                            UserName = "admin"
                        });
                });

            modelBuilder.Entity("MedicalCenter.Infrastructure.Data.Models.WorkHour", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Hour")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SheduleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SheduleId");

                    b.ToTable("WorkHours");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Hour = "08:00",
                            SheduleId = 1
                        },
                        new
                        {
                            Id = 2,
                            Hour = "08:30",
                            SheduleId = 1
                        },
                        new
                        {
                            Id = 3,
                            Hour = "09:00",
                            SheduleId = 1
                        },
                        new
                        {
                            Id = 4,
                            Hour = "09:30",
                            SheduleId = 1
                        },
                        new
                        {
                            Id = 5,
                            Hour = "10:00",
                            SheduleId = 1
                        },
                        new
                        {
                            Id = 6,
                            Hour = "10:30",
                            SheduleId = 1
                        },
                        new
                        {
                            Id = 7,
                            Hour = "11:00",
                            SheduleId = 1
                        },
                        new
                        {
                            Id = 8,
                            Hour = "11:30",
                            SheduleId = 1
                        },
                        new
                        {
                            Id = 9,
                            Hour = "13:00",
                            SheduleId = 2
                        },
                        new
                        {
                            Id = 10,
                            Hour = "13:30",
                            SheduleId = 2
                        },
                        new
                        {
                            Id = 11,
                            Hour = "14:00",
                            SheduleId = 2
                        },
                        new
                        {
                            Id = 12,
                            Hour = "14:30",
                            SheduleId = 2
                        },
                        new
                        {
                            Id = 13,
                            Hour = "15:00",
                            SheduleId = 2
                        },
                        new
                        {
                            Id = 14,
                            Hour = "15:30",
                            SheduleId = 2
                        },
                        new
                        {
                            Id = 15,
                            Hour = "16:00",
                            SheduleId = 2
                        },
                        new
                        {
                            Id = 16,
                            Hour = "16:30",
                            SheduleId = 2
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "4f15b3c4-9c3b-46fc-b0a7-d210b18f7d78",
                            ConcurrencyStamp = "18756b90-5af2-475c-b907-e6b835e16c08",
                            Name = "Administrator",
                            NormalizedName = "ADMINISTRATOR"
                        },
                        new
                        {
                            Id = "52986f99-005f-4f42-a109-67016d21f7be",
                            ConcurrencyStamp = "e4274945-fada-4ad6-b6ff-16ee256e0a0b",
                            Name = "Doctor",
                            NormalizedName = "DOCTOR"
                        },
                        new
                        {
                            Id = "05774d9b-ea16-46e1-83b7-2c47c9d71b06",
                            ConcurrencyStamp = "8713f809-09e4-437d-885d-fa47b3bc022c",
                            Name = "User",
                            NormalizedName = "USER"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "41cee654-7ba0-479d-84e4-a3f260968091",
                            RoleId = "4f15b3c4-9c3b-46fc-b0a7-d210b18f7d78"
                        },
                        new
                        {
                            UserId = "f06e3f9f-6309-4466-878b-8b0da845240c",
                            RoleId = "52986f99-005f-4f42-a109-67016d21f7be"
                        },
                        new
                        {
                            UserId = "e1fe6888-0605-4dee-ad48-1367ed7e7ec5",
                            RoleId = "52986f99-005f-4f42-a109-67016d21f7be"
                        },
                        new
                        {
                            UserId = "f706033b-4391-4356-a998-d758590aceae",
                            RoleId = "52986f99-005f-4f42-a109-67016d21f7be"
                        },
                        new
                        {
                            UserId = "84617b53-e2ef-4792-8414-deb2f9039477",
                            RoleId = "52986f99-005f-4f42-a109-67016d21f7be"
                        },
                        new
                        {
                            UserId = "08a6e10e-e4fe-4e18-a49e-0e62342dd317",
                            RoleId = "52986f99-005f-4f42-a109-67016d21f7be"
                        },
                        new
                        {
                            UserId = "1b89b403-c133-4625-9d0a-1a5773313776",
                            RoleId = "52986f99-005f-4f42-a109-67016d21f7be"
                        },
                        new
                        {
                            UserId = "6e7409bf-ba3b-40e6-a142-eec8efff38c1",
                            RoleId = "52986f99-005f-4f42-a109-67016d21f7be"
                        },
                        new
                        {
                            UserId = "e4850190-fd7d-4adc-b802-766f7f1bb2a3",
                            RoleId = "52986f99-005f-4f42-a109-67016d21f7be"
                        },
                        new
                        {
                            UserId = "7857c356-d4a7-4b6d-b286-9184870228de",
                            RoleId = "52986f99-005f-4f42-a109-67016d21f7be"
                        },
                        new
                        {
                            UserId = "3161732e-5191-4da4-863e-76f84cbcef7f",
                            RoleId = "52986f99-005f-4f42-a109-67016d21f7be"
                        },
                        new
                        {
                            UserId = "7dcff8a1-e52a-412f-93a3-dbf13e4ac5f6",
                            RoleId = "52986f99-005f-4f42-a109-67016d21f7be"
                        },
                        new
                        {
                            UserId = "29f976fe-28ce-49d7-aaaf-fe4f54575ffd",
                            RoleId = "52986f99-005f-4f42-a109-67016d21f7be"
                        },
                        new
                        {
                            UserId = "dc290fcf-ddbe-4725-80ce-20af3baacd55",
                            RoleId = "52986f99-005f-4f42-a109-67016d21f7be"
                        },
                        new
                        {
                            UserId = "fc0dc0ef-7261-4937-9592-6eb0c4d143d2",
                            RoleId = "52986f99-005f-4f42-a109-67016d21f7be"
                        },
                        new
                        {
                            UserId = "9d3984c0-855c-4a31-b2d8-6d3612c2dce2",
                            RoleId = "52986f99-005f-4f42-a109-67016d21f7be"
                        },
                        new
                        {
                            UserId = "0e6f8518-f13c-4d26-9ce2-caded264628e",
                            RoleId = "52986f99-005f-4f42-a109-67016d21f7be"
                        },
                        new
                        {
                            UserId = "806c57bf-bdca-469d-9649-3985a08581fb",
                            RoleId = "52986f99-005f-4f42-a109-67016d21f7be"
                        },
                        new
                        {
                            UserId = "1911a5dc-90ad-417e-9a6c-0466b45d11ec",
                            RoleId = "52986f99-005f-4f42-a109-67016d21f7be"
                        },
                        new
                        {
                            UserId = "f3e2b623-5345-4df7-a21c-d7dd03cfecde",
                            RoleId = "52986f99-005f-4f42-a109-67016d21f7be"
                        },
                        new
                        {
                            UserId = "95c8e6cf-ec17-4596-985a-b6ec273687d3",
                            RoleId = "52986f99-005f-4f42-a109-67016d21f7be"
                        },
                        new
                        {
                            UserId = "8bc6eca9-07fe-49c3-bf11-8b2afa117b9c",
                            RoleId = "52986f99-005f-4f42-a109-67016d21f7be"
                        },
                        new
                        {
                            UserId = "89801c76-3f5e-4414-a3fc-482eea5bc8da",
                            RoleId = "52986f99-005f-4f42-a109-67016d21f7be"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("MedicalCenter.Infrastructure.Data.Models.Doctor", b =>
                {
                    b.HasBaseType("MedicalCenter.Infrastructure.Data.Models.User");

                    b.Property<string>("Biography")
                        .IsRequired()
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Education")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Egn")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("IsOutOfCompany")
                        .HasColumnType("bit");

                    b.Property<string>("OutOnDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfileImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Representation")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("SheduleId")
                        .HasColumnType("int");

                    b.Property<int>("SpecialtyId")
                        .HasColumnType("int");

                    b.HasIndex("SheduleId");

                    b.HasIndex("SpecialtyId");

                    b.HasDiscriminator().HasValue("Doctor");

                    b.HasData(
                        new
                        {
                            Id = "f06e3f9f-6309-4466-878b-8b0da845240c",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "f2cd1c7f-1bf3-4799-8c46-f857011b7999",
                            Email = "m_monastirska@mc-bg.com",
                            EmailConfirmed = false,
                            FirstName = "Маргарита",
                            GenderId = 2,
                            JoinOnDate = "18.11.2022",
                            LastName = "Монастирска",
                            LockoutEnabled = false,
                            NormalizedEmail = "M_MONASTIRSKA@MC-BG.COM",
                            NormalizedUserName = "M_MONASTIRSKA",
                            PasswordHash = "AQAAAAEAACcQAAAAEJUweDMT7hXepf/TBWsqlDX8IxkS2tFRF5Yf4eKKhiJecgED7aX2+0Uub4Vpkz8+VA==",
                            PhoneNumber = "+359888888100",
                            PhoneNumberConfirmed = false,
                            Role = "Doctor",
                            SecurityStamp = "27adc963-48a4-43c8-805e-d3c67635ea07",
                            TwoFactorEnabled = false,
                            UserName = "m_monastirska",
                            Biography = "Това е поредица от латински думи които, както са позиционирани, не образувайте изречения с пълен смисъл, а дайте живот на тестов текст, полезен за запълване на пространства, които впоследствие ще бъдат заети от ad hoc текстове, съставени от комуникационни специалисти. Със сигурност е най -известният заместващ текст дори ако има различни версии, които се различават от реда, в който се повтарят латинските думи. Lorem ipsum съдържа шрифтове , които се използват повече, аспект което ви позволява да имате преглед на изобразяването на текста по отношение на избор на шрифт an d размер на шрифта.",
                            Education = "Когато се отнася до Lorem ipsum, се използват различни изрази, а именно текст за попълване, измислен текст, сляп текст или заместващ текст: накратко, значението му също може да бъде нула, но полезността му е толкова ясна, че да мине през вековете и да устои на ироничните и модерни версии, дошли с появата на мрежата.",
                            Egn = "7903129851",
                            IsOutOfCompany = false,
                            ProfileImageUrl = "https://superdoc.bg/photos/doctors/large/rwirLXB6bNPuWQCeOWgM9c96rUFbsxnxIonXi6Gf.jpg",
                            Representation = "Lorem ipsum dolor sit amet. Графичните и типографските оператори знаят това добре, в действителност всички професии, занимаващи се с комуникационната вселена, имат стабилна връзка с тези думи, но какво е това? Lorem ipsum е фиктивен текст без никакъв смисъл.",
                            SheduleId = 1,
                            SpecialtyId = 1
                        },
                        new
                        {
                            Id = "e1fe6888-0605-4dee-ad48-1367ed7e7ec5",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "f2550580-5a4a-412f-b483-a56715812563",
                            Email = "s_slavchev@mc-bg.com",
                            EmailConfirmed = false,
                            FirstName = "Станислав",
                            GenderId = 1,
                            JoinOnDate = "18.11.2022",
                            LastName = "Славчев",
                            LockoutEnabled = false,
                            NormalizedEmail = "S_SLAVCHEV@MC-BG.COM",
                            NormalizedUserName = "S_SLAVCHEV",
                            PasswordHash = "AQAAAAEAACcQAAAAEEuZgbGwqirNuyRzzoBoXRvL/kP+A9B7UDHmbS0m93DG912fMWE6DL3vcMa90DN3+Q==",
                            PhoneNumber = "+359888888101",
                            PhoneNumberConfirmed = false,
                            Role = "Doctor",
                            SecurityStamp = "a1626157-42ef-4e10-90d7-47d9c89b4a58",
                            TwoFactorEnabled = false,
                            UserName = "s_slavchev",
                            Biography = "Това е поредица от латински думи които, както са позиционирани, не образувайте изречения с пълен смисъл, а дайте живот на тестов текст, полезен за запълване на пространства, които впоследствие ще бъдат заети от ad hoc текстове, съставени от комуникационни специалисти. Със сигурност е най -известният заместващ текст дори ако има различни версии, които се различават от реда, в който се повтарят латинските думи. Lorem ipsum съдържа шрифтове , които се използват повече, аспект което ви позволява да имате преглед на изобразяването на текста по отношение на избор на шрифт an d размер на шрифта.",
                            Education = "Когато се отнася до Lorem ipsum, се използват различни изрази, а именно текст за попълване, измислен текст, сляп текст или заместващ текст: накратко, значението му също може да бъде нула, но полезността му е толкова ясна, че да мине през вековете и да устои на ироничните и модерни версии, дошли с появата на мрежата.",
                            Egn = "7512150522",
                            IsOutOfCompany = false,
                            ProfileImageUrl = "https://superdoc.bg/photos/doctors/large/rG5hcfjVRagmEoVVwN8afiTTrHKpU2nTKnRbOWr6.jpg",
                            Representation = "Lorem ipsum dolor sit amet. Графичните и типографските оператори знаят това добре, в действителност всички професии, занимаващи се с комуникационната вселена, имат стабилна връзка с тези думи, но какво е това? Lorem ipsum е фиктивен текст без никакъв смисъл.",
                            SheduleId = 2,
                            SpecialtyId = 1
                        },
                        new
                        {
                            Id = "f706033b-4391-4356-a998-d758590aceae",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "ac387d97-10d1-4658-951d-424c0c40c81f",
                            Email = "b_petkova@mc-bg.com",
                            EmailConfirmed = false,
                            FirstName = "Бисерка",
                            GenderId = 2,
                            JoinOnDate = "18.11.2022",
                            LastName = "Петкова",
                            LockoutEnabled = false,
                            NormalizedEmail = "B_PETKOVA@MC-BG.COM",
                            NormalizedUserName = "B_PETKOVA",
                            PasswordHash = "AQAAAAEAACcQAAAAEG44TWoWb2NPQ4BMhPbxCMSBiJuRjXp7rw7iiZZai2w0BtA15/ZnLLUM4liF/vP59g==",
                            PhoneNumber = "+359888888102",
                            PhoneNumberConfirmed = false,
                            Role = "Doctor",
                            SecurityStamp = "1090020f-64ed-45f7-b4da-9f2d23e053f4",
                            TwoFactorEnabled = false,
                            UserName = "b_petkova",
                            Biography = "Това е поредица от латински думи които, както са позиционирани, не образувайте изречения с пълен смисъл, а дайте живот на тестов текст, полезен за запълване на пространства, които впоследствие ще бъдат заети от ad hoc текстове, съставени от комуникационни специалисти. Със сигурност е най -известният заместващ текст дори ако има различни версии, които се различават от реда, в който се повтарят латинските думи. Lorem ipsum съдържа шрифтове , които се използват повече, аспект което ви позволява да имате преглед на изобразяването на текста по отношение на избор на шрифт an d размер на шрифта.",
                            Education = "Когато се отнася до Lorem ipsum, се използват различни изрази, а именно текст за попълване, измислен текст, сляп текст или заместващ текст: накратко, значението му също може да бъде нула, но полезността му е толкова ясна, че да мине през вековете и да устои на ироничните и модерни версии, дошли с появата на мрежата.",
                            Egn = "7412135099",
                            IsOutOfCompany = false,
                            ProfileImageUrl = "https://superdoc.bg/photos/doctors/large/l45aQMv1pMhcTfABGdxWEgnlCmTPFTfE94sPPuDs.jpeg",
                            Representation = "Lorem ipsum dolor sit amet. Графичните и типографските оператори знаят това добре, в действителност всички професии, занимаващи се с комуникационната вселена, имат стабилна връзка с тези думи, но какво е това? Lorem ipsum е фиктивен текст без никакъв смисъл.",
                            SheduleId = 1,
                            SpecialtyId = 8
                        },
                        new
                        {
                            Id = "84617b53-e2ef-4792-8414-deb2f9039477",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "18fe0fe1-dc95-483a-ae84-7dc1f1fc42dd",
                            Email = "m_velikova@mc-bg.com",
                            EmailConfirmed = false,
                            FirstName = "Мими",
                            GenderId = 2,
                            JoinOnDate = "18.11.2022",
                            LastName = "Великова",
                            LockoutEnabled = false,
                            NormalizedEmail = "M_VELIKOVA@MC-BG.COM",
                            NormalizedUserName = "M_VELIKOVA",
                            PasswordHash = "AQAAAAEAACcQAAAAEHac94MoeuqrI5ES7a5O/p2OhBecuuNUdLgW5+KCDQJXdMZUwTcgi1Chpax1Jc4BDQ==",
                            PhoneNumber = "+359888888103",
                            PhoneNumberConfirmed = false,
                            Role = "Doctor",
                            SecurityStamp = "85fdec89-8af7-43ce-8276-af790c88a800",
                            TwoFactorEnabled = false,
                            UserName = "m_velikova",
                            Biography = "Това е поредица от латински думи които, както са позиционирани, не образувайте изречения с пълен смисъл, а дайте живот на тестов текст, полезен за запълване на пространства, които впоследствие ще бъдат заети от ad hoc текстове, съставени от комуникационни специалисти. Със сигурност е най -известният заместващ текст дори ако има различни версии, които се различават от реда, в който се повтарят латинските думи. Lorem ipsum съдържа шрифтове , които се използват повече, аспект което ви позволява да имате преглед на изобразяването на текста по отношение на избор на шрифт an d размер на шрифта.",
                            Education = "Когато се отнася до Lorem ipsum, се използват различни изрази, а именно текст за попълване, измислен текст, сляп текст или заместващ текст: накратко, значението му също може да бъде нула, но полезността му е толкова ясна, че да мине през вековете и да устои на ироничните и модерни версии, дошли с появата на мрежата.",
                            Egn = "8707015574",
                            IsOutOfCompany = false,
                            ProfileImageUrl = "https://superdoc.bg/photos/doctors/large/U0ppKpWfMPGebFNhwhDjFLoKZ2UL3hg26IDn1GPo.jpg",
                            Representation = "Lorem ipsum dolor sit amet. Графичните и типографските оператори знаят това добре, в действителност всички професии, занимаващи се с комуникационната вселена, имат стабилна връзка с тези думи, но какво е това? Lorem ipsum е фиктивен текст без никакъв смисъл.",
                            SheduleId = 2,
                            SpecialtyId = 8
                        },
                        new
                        {
                            Id = "08a6e10e-e4fe-4e18-a49e-0e62342dd317",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "4472f578-40fc-47f0-ac7d-93579c64ea60",
                            Email = "t_stoev@mc-bg.com",
                            EmailConfirmed = false,
                            FirstName = "Тодор",
                            GenderId = 1,
                            JoinOnDate = "18.11.2022",
                            LastName = "Стоев",
                            LockoutEnabled = false,
                            NormalizedEmail = "T_STOEV@MC-BG.COM",
                            NormalizedUserName = "T_STOEV",
                            PasswordHash = "AQAAAAEAACcQAAAAEGo40NcrIsp9HgRhTF6U8mQw97sehJqdvdIDLlPFXBGEg+S67NfW05Nj4kQkfSXP7A==",
                            PhoneNumber = "+359888888104",
                            PhoneNumberConfirmed = false,
                            Role = "Doctor",
                            SecurityStamp = "431722c9-57fa-4e17-98a4-d19140e263a3",
                            TwoFactorEnabled = false,
                            UserName = "t_stoev",
                            Biography = "Това е поредица от латински думи които, както са позиционирани, не образувайте изречения с пълен смисъл, а дайте живот на тестов текст, полезен за запълване на пространства, които впоследствие ще бъдат заети от ad hoc текстове, съставени от комуникационни специалисти. Със сигурност е най -известният заместващ текст дори ако има различни версии, които се различават от реда, в който се повтарят латинските думи. Lorem ipsum съдържа шрифтове , които се използват повече, аспект което ви позволява да имате преглед на изобразяването на текста по отношение на избор на шрифт an d размер на шрифта.",
                            Education = "Когато се отнася до Lorem ipsum, се използват различни изрази, а именно текст за попълване, измислен текст, сляп текст или заместващ текст: накратко, значението му също може да бъде нула, но полезността му е толкова ясна, че да мине през вековете и да устои на ироничните и модерни версии, дошли с появата на мрежата.",
                            Egn = "6902251307",
                            IsOutOfCompany = false,
                            ProfileImageUrl = "https://superdoc.bg/photos/doctors/large/gTvSgfoBMzCm1rEIuxP7zPUVaWXrz92u6zlaESPk.jpg",
                            Representation = "Lorem ipsum dolor sit amet. Графичните и типографските оператори знаят това добре, в действителност всички професии, занимаващи се с комуникационната вселена, имат стабилна връзка с тези думи, но какво е това? Lorem ipsum е фиктивен текст без никакъв смисъл.",
                            SheduleId = 1,
                            SpecialtyId = 11
                        },
                        new
                        {
                            Id = "1b89b403-c133-4625-9d0a-1a5773313776",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "0237d452-f0b6-46aa-b9d5-d9d3baa354a3",
                            Email = "m_blagoeva@mc-bg.com",
                            EmailConfirmed = false,
                            FirstName = "Мая",
                            GenderId = 2,
                            JoinOnDate = "18.11.2022",
                            LastName = "Благоева",
                            LockoutEnabled = false,
                            NormalizedEmail = "M_BLAGOEVA@MC-BG.COM",
                            NormalizedUserName = "M_BLAGOEVA",
                            PasswordHash = "AQAAAAEAACcQAAAAEBmkHZYUnl8+eBpIAd79kK1kOqfOJbbMi8T+7OQ+gaMEP5bSPzkLrxRcKTV95mZqyw==",
                            PhoneNumber = "+359888888105",
                            PhoneNumberConfirmed = false,
                            Role = "Doctor",
                            SecurityStamp = "ebb0e73e-8074-42bd-a601-58c8106b74e8",
                            TwoFactorEnabled = false,
                            UserName = "m_blagoeva",
                            Biography = "Това е поредица от латински думи които, както са позиционирани, не образувайте изречения с пълен смисъл, а дайте живот на тестов текст, полезен за запълване на пространства, които впоследствие ще бъдат заети от ad hoc текстове, съставени от комуникационни специалисти. Със сигурност е най -известният заместващ текст дори ако има различни версии, които се различават от реда, в който се повтарят латинските думи. Lorem ipsum съдържа шрифтове , които се използват повече, аспект което ви позволява да имате преглед на изобразяването на текста по отношение на избор на шрифт an d размер на шрифта.",
                            Education = "Когато се отнася до Lorem ipsum, се използват различни изрази, а именно текст за попълване, измислен текст, сляп текст или заместващ текст: накратко, значението му също може да бъде нула, но полезността му е толкова ясна, че да мине през вековете и да устои на ироничните и модерни версии, дошли с появата на мрежата.",
                            Egn = "7904245096",
                            IsOutOfCompany = false,
                            ProfileImageUrl = "https://superdoc.bg/photos/doctors/large/Enm6h1TL88KLFBQzRqGsUkpASF81JIEAajqqoCwn.jpg",
                            Representation = "Lorem ipsum dolor sit amet. Графичните и типографските оператори знаят това добре, в действителност всички професии, занимаващи се с комуникационната вселена, имат стабилна връзка с тези думи, но какво е това? Lorem ipsum е фиктивен текст без никакъв смисъл.",
                            SheduleId = 2,
                            SpecialtyId = 11
                        },
                        new
                        {
                            Id = "6e7409bf-ba3b-40e6-a142-eec8efff38c1",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "2f13a1d8-d972-44bf-86b2-93509610c3dc",
                            Email = "m_kalinkova@mc-bg.com",
                            EmailConfirmed = false,
                            FirstName = "Мария",
                            GenderId = 2,
                            JoinOnDate = "18.11.2022",
                            LastName = "Калинкова",
                            LockoutEnabled = false,
                            NormalizedEmail = "M_KALINKOVA@MC-BG.COM",
                            NormalizedUserName = "M_KALINKOVA",
                            PasswordHash = "AQAAAAEAACcQAAAAEKyrtBFJqw0yKP8ifiXd5Y4j0nOKOigAgVRkeCVk6AHQydWM89H1ntVftAR3bSMCDw==",
                            PhoneNumber = "+359888888106",
                            PhoneNumberConfirmed = false,
                            Role = "Doctor",
                            SecurityStamp = "d1d66b11-f3ff-42c1-b659-1d87b8981409",
                            TwoFactorEnabled = false,
                            UserName = "m_kalinkova",
                            Biography = "Това е поредица от латински думи които, както са позиционирани, не образувайте изречения с пълен смисъл, а дайте живот на тестов текст, полезен за запълване на пространства, които впоследствие ще бъдат заети от ad hoc текстове, съставени от комуникационни специалисти. Със сигурност е най -известният заместващ текст дори ако има различни версии, които се различават от реда, в който се повтарят латинските думи. Lorem ipsum съдържа шрифтове , които се използват повече, аспект което ви позволява да имате преглед на изобразяването на текста по отношение на избор на шрифт an d размер на шрифта.",
                            Education = "Когато се отнася до Lorem ipsum, се използват различни изрази, а именно текст за попълване, измислен текст, сляп текст или заместващ текст: накратко, значението му също може да бъде нула, но полезността му е толкова ясна, че да мине през вековете и да устои на ироничните и модерни версии, дошли с появата на мрежата.",
                            Egn = "9107227892",
                            IsOutOfCompany = false,
                            ProfileImageUrl = "https://superdoc.bg/photos/doctors/large/9oLkWDJZ3MlW0dzaOmCsjB3XXFecvaWhOW51E14f.jpg",
                            Representation = "Lorem ipsum dolor sit amet. Графичните и типографските оператори знаят това добре, в действителност всички професии, занимаващи се с комуникационната вселена, имат стабилна връзка с тези думи, но какво е това? Lorem ipsum е фиктивен текст без никакъв смисъл.",
                            SheduleId = 1,
                            SpecialtyId = 24
                        },
                        new
                        {
                            Id = "e4850190-fd7d-4adc-b802-766f7f1bb2a3",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "1e6461e1-d321-41d1-922c-55b1f2a8212d",
                            Email = "d_georgiev@mc-bg.com",
                            EmailConfirmed = false,
                            FirstName = "Димитър",
                            GenderId = 1,
                            JoinOnDate = "18.11.2022",
                            LastName = "Георгиев",
                            LockoutEnabled = false,
                            NormalizedEmail = "D_GEORGIEV@MC-BG.COM",
                            NormalizedUserName = "D_GEORGIEV",
                            PasswordHash = "AQAAAAEAACcQAAAAECAyId9CDrL9Kuns6x1a43dN3AjrsckWduhEX3cZf2aijUuW+j+MrL2JMUe2itsnsw==",
                            PhoneNumber = "+359888888107",
                            PhoneNumberConfirmed = false,
                            Role = "Doctor",
                            SecurityStamp = "1e23f846-f87c-417e-af02-7fb4dd98ca19",
                            TwoFactorEnabled = false,
                            UserName = "d_georgiev",
                            Biography = "Това е поредица от латински думи които, както са позиционирани, не образувайте изречения с пълен смисъл, а дайте живот на тестов текст, полезен за запълване на пространства, които впоследствие ще бъдат заети от ad hoc текстове, съставени от комуникационни специалисти. Със сигурност е най -известният заместващ текст дори ако има различни версии, които се различават от реда, в който се повтарят латинските думи. Lorem ipsum съдържа шрифтове , които се използват повече, аспект което ви позволява да имате преглед на изобразяването на текста по отношение на избор на шрифт an d размер на шрифта.",
                            Education = "Когато се отнася до Lorem ipsum, се използват различни изрази, а именно текст за попълване, измислен текст, сляп текст или заместващ текст: накратко, значението му също може да бъде нула, но полезността му е толкова ясна, че да мине през вековете и да устои на ироничните и модерни версии, дошли с появата на мрежата.",
                            Egn = "7504196361",
                            IsOutOfCompany = false,
                            ProfileImageUrl = "https://superdoc.bg/photos/doctors/large/zCDqlTJtNK9oicEpDEjON6JQozN57PchSvqOUoqL.jpg",
                            Representation = "Lorem ipsum dolor sit amet. Графичните и типографските оператори знаят това добре, в действителност всички професии, занимаващи се с комуникационната вселена, имат стабилна връзка с тези думи, но какво е това? Lorem ipsum е фиктивен текст без никакъв смисъл.",
                            SheduleId = 2,
                            SpecialtyId = 24
                        },
                        new
                        {
                            Id = "7857c356-d4a7-4b6d-b286-9184870228de",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "6131191d-6e97-45cb-ae4c-5159b8ddd6d5",
                            Email = "r_ruseva@mc-bg.com",
                            EmailConfirmed = false,
                            FirstName = "Ралица",
                            GenderId = 2,
                            JoinOnDate = "18.11.2022",
                            LastName = "Русева",
                            LockoutEnabled = false,
                            NormalizedEmail = "R_RUSEVA@MC-BG.COM",
                            NormalizedUserName = "R_RUSEVA",
                            PasswordHash = "AQAAAAEAACcQAAAAEBPBrEQJF0fZzvKcCBZgrQ96thIcbqAnydwXRSGWAJBZSY3yt6zJZAqc1IinNgCKyw==",
                            PhoneNumber = "+359888888108",
                            PhoneNumberConfirmed = false,
                            Role = "Doctor",
                            SecurityStamp = "63dcafd8-5842-4db8-bb73-7467e836b2c2",
                            TwoFactorEnabled = false,
                            UserName = "r_ruseva",
                            Biography = "Това е поредица от латински думи които, както са позиционирани, не образувайте изречения с пълен смисъл, а дайте живот на тестов текст, полезен за запълване на пространства, които впоследствие ще бъдат заети от ad hoc текстове, съставени от комуникационни специалисти. Със сигурност е най -известният заместващ текст дори ако има различни версии, които се различават от реда, в който се повтарят латинските думи. Lorem ipsum съдържа шрифтове , които се използват повече, аспект което ви позволява да имате преглед на изобразяването на текста по отношение на избор на шрифт an d размер на шрифта.",
                            Education = "Когато се отнася до Lorem ipsum, се използват различни изрази, а именно текст за попълване, измислен текст, сляп текст или заместващ текст: накратко, значението му също може да бъде нула, но полезността му е толкова ясна, че да мине през вековете и да устои на ироничните и модерни версии, дошли с появата на мрежата.",
                            Egn = "9401161818",
                            IsOutOfCompany = false,
                            ProfileImageUrl = "https://superdoc.bg/photos/doctors/large/V1gasguBhI3ii3C1ryit4TuCSercdF5ynvBsxNpd.jpg",
                            Representation = "Lorem ipsum dolor sit amet. Графичните и типографските оператори знаят това добре, в действителност всички професии, занимаващи се с комуникационната вселена, имат стабилна връзка с тези думи, но какво е това? Lorem ipsum е фиктивен текст без никакъв смисъл.",
                            SheduleId = 1,
                            SpecialtyId = 31
                        },
                        new
                        {
                            Id = "3161732e-5191-4da4-863e-76f84cbcef7f",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "f375037b-eabf-4d21-954b-5f60d26835df",
                            Email = "s_tochev@mc-bg.com",
                            EmailConfirmed = false,
                            FirstName = "Сотир",
                            GenderId = 1,
                            JoinOnDate = "18.11.2022",
                            LastName = "Точев",
                            LockoutEnabled = false,
                            NormalizedEmail = "S_TOCHEV@MC-BG.COM",
                            NormalizedUserName = "S_TOCHEV",
                            PasswordHash = "AQAAAAEAACcQAAAAEKqH3JUKeQ8FtGzahU3RYYUz7uw40XZDm9XjXx8Y2WuG7Mwy9K502ukezUnBXCIpKA==",
                            PhoneNumber = "+359888888109",
                            PhoneNumberConfirmed = false,
                            Role = "Doctor",
                            SecurityStamp = "12db59c4-ef70-4780-a475-fe561aaa38e6",
                            TwoFactorEnabled = false,
                            UserName = "s_tochev",
                            Biography = "Това е поредица от латински думи които, както са позиционирани, не образувайте изречения с пълен смисъл, а дайте живот на тестов текст, полезен за запълване на пространства, които впоследствие ще бъдат заети от ad hoc текстове, съставени от комуникационни специалисти. Със сигурност е най -известният заместващ текст дори ако има различни версии, които се различават от реда, в който се повтарят латинските думи. Lorem ipsum съдържа шрифтове , които се използват повече, аспект което ви позволява да имате преглед на изобразяването на текста по отношение на избор на шрифт an d размер на шрифта.",
                            Education = "Когато се отнася до Lorem ipsum, се използват различни изрази, а именно текст за попълване, измислен текст, сляп текст или заместващ текст: накратко, значението му също може да бъде нула, но полезността му е толкова ясна, че да мине през вековете и да устои на ироничните и модерни версии, дошли с появата на мрежата.",
                            Egn = "8112144846",
                            IsOutOfCompany = false,
                            ProfileImageUrl = "https://superdoc.bg/photos/doctors/large/tm0Q6jEA4Zf85mR2cCEoYjNckLlekPrw5bL0GHH1.jpg",
                            Representation = "Lorem ipsum dolor sit amet. Графичните и типографските оператори знаят това добре, в действителност всички професии, занимаващи се с комуникационната вселена, имат стабилна връзка с тези думи, но какво е това? Lorem ipsum е фиктивен текст без никакъв смисъл.",
                            SheduleId = 2,
                            SpecialtyId = 31
                        },
                        new
                        {
                            Id = "7dcff8a1-e52a-412f-93a3-dbf13e4ac5f6",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "6c5165a7-0025-4072-b95c-4acd66e63e4e",
                            Email = "s_atanasova@mc-bg.com",
                            EmailConfirmed = false,
                            FirstName = "Стела",
                            GenderId = 2,
                            JoinOnDate = "18.11.2022",
                            LastName = "Атанасова",
                            LockoutEnabled = false,
                            NormalizedEmail = "S_ATANASOVA@MC-BG.COM",
                            NormalizedUserName = "S_ATANASOVA",
                            PasswordHash = "AQAAAAEAACcQAAAAEBzc84EBmmMlRSvqz6Gqma8ZGxakCbDSxu2600i6Zm7530foOni8e5E9BHK4vyikcw==",
                            PhoneNumber = "+359888888110",
                            PhoneNumberConfirmed = false,
                            Role = "Doctor",
                            SecurityStamp = "0a8f307c-c715-40cb-92cc-4c621dcb961f",
                            TwoFactorEnabled = false,
                            UserName = "s_atanasova",
                            Biography = "Това е поредица от латински думи които, както са позиционирани, не образувайте изречения с пълен смисъл, а дайте живот на тестов текст, полезен за запълване на пространства, които впоследствие ще бъдат заети от ad hoc текстове, съставени от комуникационни специалисти. Със сигурност е най -известният заместващ текст дори ако има различни версии, които се различават от реда, в който се повтарят латинските думи. Lorem ipsum съдържа шрифтове , които се използват повече, аспект което ви позволява да имате преглед на изобразяването на текста по отношение на избор на шрифт an d размер на шрифта.",
                            Education = "Когато се отнася до Lorem ipsum, се използват различни изрази, а именно текст за попълване, измислен текст, сляп текст или заместващ текст: накратко, значението му също може да бъде нула, но полезността му е толкова ясна, че да мине през вековете и да устои на ироничните и модерни версии, дошли с появата на мрежата.",
                            Egn = "7702262899",
                            IsOutOfCompany = false,
                            ProfileImageUrl = "https://superdoc.bg/photos/doctors/large/6iM4XryT7EmD57gFNzB0lcqp4pfEMlOXwYsDcuv5.jpg",
                            Representation = "Lorem ipsum dolor sit amet. Графичните и типографските оператори знаят това добре, в действителност всички професии, занимаващи се с комуникационната вселена, имат стабилна връзка с тези думи, но какво е това? Lorem ipsum е фиктивен текст без никакъв смисъл.",
                            SheduleId = 1,
                            SpecialtyId = 44
                        },
                        new
                        {
                            Id = "29f976fe-28ce-49d7-aaaf-fe4f54575ffd",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "873215ee-faa6-46e3-a538-bf970985576b",
                            Email = "r_ikonomov@mc-bg.com",
                            EmailConfirmed = false,
                            FirstName = "Росен",
                            GenderId = 1,
                            JoinOnDate = "18.11.2022",
                            LastName = "Икономов",
                            LockoutEnabled = false,
                            NormalizedEmail = "R_IKONOMOV@MC-BG.COM",
                            NormalizedUserName = "R_IKONOMOV",
                            PasswordHash = "AQAAAAEAACcQAAAAEAZ5Pasma4E31xh7Q0uWjddfOjBHoyWu0PGanGrxoeqTdr0AF+OxquCv8V8KjDyJzw==",
                            PhoneNumber = "+359888888111",
                            PhoneNumberConfirmed = false,
                            Role = "Doctor",
                            SecurityStamp = "c192910e-8868-488a-a087-5520c09bedd9",
                            TwoFactorEnabled = false,
                            UserName = "r_ikonomov",
                            Biography = "Това е поредица от латински думи които, както са позиционирани, не образувайте изречения с пълен смисъл, а дайте живот на тестов текст, полезен за запълване на пространства, които впоследствие ще бъдат заети от ad hoc текстове, съставени от комуникационни специалисти. Със сигурност е най -известният заместващ текст дори ако има различни версии, които се различават от реда, в който се повтарят латинските думи. Lorem ipsum съдържа шрифтове , които се използват повече, аспект което ви позволява да имате преглед на изобразяването на текста по отношение на избор на шрифт an d размер на шрифта.",
                            Education = "Когато се отнася до Lorem ipsum, се използват различни изрази, а именно текст за попълване, измислен текст, сляп текст или заместващ текст: накратко, значението му също може да бъде нула, но полезността му е толкова ясна, че да мине през вековете и да устои на ироничните и модерни версии, дошли с появата на мрежата.",
                            Egn = "8707192482",
                            IsOutOfCompany = false,
                            ProfileImageUrl = "https://superdoc.bg/photos/doctors/large/eco5fuHqM1fIXYMzN9X9nvQH8f39RNdTbsOoFk40.jpeg",
                            Representation = "Lorem ipsum dolor sit amet. Графичните и типографските оператори знаят това добре, в действителност всички професии, занимаващи се с комуникационната вселена, имат стабилна връзка с тези думи, но какво е това? Lorem ipsum е фиктивен текст без никакъв смисъл.",
                            SheduleId = 2,
                            SpecialtyId = 44
                        },
                        new
                        {
                            Id = "dc290fcf-ddbe-4725-80ce-20af3baacd55",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "2c1998f9-2364-4390-8a14-6a97aba7bf8d",
                            Email = "m_vuldjev@mc-bg.com",
                            EmailConfirmed = false,
                            FirstName = "Михаил",
                            GenderId = 1,
                            JoinOnDate = "18.11.2022",
                            LastName = "Вулджев",
                            LockoutEnabled = false,
                            NormalizedEmail = "M_VULDJEV@MC-BG.COM",
                            NormalizedUserName = "M_VULDJEV",
                            PasswordHash = "AQAAAAEAACcQAAAAEMbW/45QdYoFZ8PHg/icLRI5oE3FMkOVMdeVKsq06wgP/j4FUTbcem+AAEB2TR/dTw==",
                            PhoneNumber = "+359888888112",
                            PhoneNumberConfirmed = false,
                            Role = "Doctor",
                            SecurityStamp = "c72476ce-cda5-45ac-a787-02d4493fc9da",
                            TwoFactorEnabled = false,
                            UserName = "m_vuldjev",
                            Biography = "Това е поредица от латински думи които, както са позиционирани, не образувайте изречения с пълен смисъл, а дайте живот на тестов текст, полезен за запълване на пространства, които впоследствие ще бъдат заети от ad hoc текстове, съставени от комуникационни специалисти. Със сигурност е най -известният заместващ текст дори ако има различни версии, които се различават от реда, в който се повтарят латинските думи. Lorem ipsum съдържа шрифтове , които се използват повече, аспект което ви позволява да имате преглед на изобразяването на текста по отношение на избор на шрифт an d размер на шрифта.",
                            Education = "Когато се отнася до Lorem ipsum, се използват различни изрази, а именно текст за попълване, измислен текст, сляп текст или заместващ текст: накратко, значението му също може да бъде нула, но полезността му е толкова ясна, че да мине през вековете и да устои на ироничните и модерни версии, дошли с появата на мрежата.",
                            Egn = "7512152504",
                            IsOutOfCompany = false,
                            ProfileImageUrl = "https://superdoc.bg/photos/doctors/large/cbaXljvO1Z6PTLSLRyIobdw2rtISqC9d7WeelHO3.jpg",
                            Representation = "Lorem ipsum dolor sit amet. Графичните и типографските оператори знаят това добре, в действителност всички професии, занимаващи се с комуникационната вселена, имат стабилна връзка с тези думи, но какво е това? Lorem ipsum е фиктивен текст без никакъв смисъл.",
                            SheduleId = 1,
                            SpecialtyId = 55
                        },
                        new
                        {
                            Id = "fc0dc0ef-7261-4937-9592-6eb0c4d143d2",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "2596197d-fcf9-4f69-988e-544dea2e917a",
                            Email = "h_hristov@mc-bg.com",
                            EmailConfirmed = false,
                            FirstName = "Христо",
                            GenderId = 1,
                            JoinOnDate = "18.11.2022",
                            LastName = "Христов",
                            LockoutEnabled = false,
                            NormalizedEmail = "H_HRISTOV@MC-BG.COM",
                            NormalizedUserName = "H_HRISTOV",
                            PasswordHash = "AQAAAAEAACcQAAAAEIs639Vmwrb+wsUfen0CN3aWVyR+GRYJWyVcUjVmkw88MOocCwnJ/5jWZb9rUOZGvg==",
                            PhoneNumber = "+359888888113",
                            PhoneNumberConfirmed = false,
                            Role = "Doctor",
                            SecurityStamp = "0f19430e-1cce-4fe4-9db1-9c0b9e856b67",
                            TwoFactorEnabled = false,
                            UserName = "h_hristov",
                            Biography = "Това е поредица от латински думи които, както са позиционирани, не образувайте изречения с пълен смисъл, а дайте живот на тестов текст, полезен за запълване на пространства, които впоследствие ще бъдат заети от ad hoc текстове, съставени от комуникационни специалисти. Със сигурност е най -известният заместващ текст дори ако има различни версии, които се различават от реда, в който се повтарят латинските думи. Lorem ipsum съдържа шрифтове , които се използват повече, аспект което ви позволява да имате преглед на изобразяването на текста по отношение на избор на шрифт an d размер на шрифта.",
                            Education = "Когато се отнася до Lorem ipsum, се използват различни изрази, а именно текст за попълване, измислен текст, сляп текст или заместващ текст: накратко, значението му също може да бъде нула, но полезността му е толкова ясна, че да мине през вековете и да устои на ироничните и модерни версии, дошли с появата на мрежата.",
                            Egn = "7512155144",
                            IsOutOfCompany = false,
                            ProfileImageUrl = "https://superdoc.bg/photos/doctors/large/2dmSQ4sBxuWwMAOGotyikgUYHTD3VB7u4r8t17Ys.jpg",
                            Representation = "Lorem ipsum dolor sit amet. Графичните и типографските оператори знаят това добре, в действителност всички професии, занимаващи се с комуникационната вселена, имат стабилна връзка с тези думи, но какво е това? Lorem ipsum е фиктивен текст без никакъв смисъл.",
                            SheduleId = 2,
                            SpecialtyId = 55
                        },
                        new
                        {
                            Id = "9d3984c0-855c-4a31-b2d8-6d3612c2dce2",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "3318b952-c903-4602-a5e2-5a06339070b7",
                            Email = "a_tomova@mc-bg.com",
                            EmailConfirmed = false,
                            FirstName = "Антония",
                            GenderId = 2,
                            JoinOnDate = "18.11.2022",
                            LastName = "Томова",
                            LockoutEnabled = false,
                            NormalizedEmail = "A_TOMOVA@MC-BG.COM",
                            NormalizedUserName = "A_TOMOVA",
                            PasswordHash = "AQAAAAEAACcQAAAAEFH3yzqxgzHSNcG807l8xxXehNVWK8XFEfxH1K5uWWxjae6C/d5xhxf919M1Uy31mg==",
                            PhoneNumber = "+359888888114",
                            PhoneNumberConfirmed = false,
                            Role = "Doctor",
                            SecurityStamp = "afab0053-9dc2-4824-bd4d-df1c0fcbcff4",
                            TwoFactorEnabled = false,
                            UserName = "a_tomova",
                            Biography = "Това е поредица от латински думи които, както са позиционирани, не образувайте изречения с пълен смисъл, а дайте живот на тестов текст, полезен за запълване на пространства, които впоследствие ще бъдат заети от ad hoc текстове, съставени от комуникационни специалисти. Със сигурност е най -известният заместващ текст дори ако има различни версии, които се различават от реда, в който се повтарят латинските думи. Lorem ipsum съдържа шрифтове , които се използват повече, аспект което ви позволява да имате преглед на изобразяването на текста по отношение на избор на шрифт an d размер на шрифта.",
                            Education = "Когато се отнася до Lorem ipsum, се използват различни изрази, а именно текст за попълване, измислен текст, сляп текст или заместващ текст: накратко, значението му също може да бъде нула, но полезността му е толкова ясна, че да мине през вековете и да устои на ироничните и модерни версии, дошли с появата на мрежата.",
                            Egn = "7411033533",
                            IsOutOfCompany = false,
                            ProfileImageUrl = "https://superdoc.bg/photos/doctors/large/2iIY3v12meJbiYoNQhB4yDBmr6Ff2NYtxIFYiIvK.jpg",
                            Representation = "Lorem ipsum dolor sit amet. Графичните и типографските оператори знаят това добре, в действителност всички професии, занимаващи се с комуникационната вселена, имат стабилна връзка с тези думи, но какво е това? Lorem ipsum е фиктивен текст без никакъв смисъл.",
                            SheduleId = 1,
                            SpecialtyId = 60
                        },
                        new
                        {
                            Id = "0e6f8518-f13c-4d26-9ce2-caded264628e",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "4143e3cb-7218-4962-b871-442ab3044753",
                            Email = "k_moskova@mc-bg.com",
                            EmailConfirmed = false,
                            FirstName = "Катерина",
                            GenderId = 2,
                            JoinOnDate = "18.11.2022",
                            LastName = "Москова",
                            LockoutEnabled = false,
                            NormalizedEmail = "K_MOSKOVA@MC-BG.COM",
                            NormalizedUserName = "K_MOSKOVA",
                            PasswordHash = "AQAAAAEAACcQAAAAEBucsOci8tQLIJFcxG4VFDfZRJsq4OHRy7V+oEGWIMCj5blcT/XRhVwwMtInAr45HA==",
                            PhoneNumber = "+359888888115",
                            PhoneNumberConfirmed = false,
                            Role = "Doctor",
                            SecurityStamp = "c9f935ef-95dd-4ac1-8603-3314b0f7995f",
                            TwoFactorEnabled = false,
                            UserName = "k_moskova",
                            Biography = "Това е поредица от латински думи които, както са позиционирани, не образувайте изречения с пълен смисъл, а дайте живот на тестов текст, полезен за запълване на пространства, които впоследствие ще бъдат заети от ad hoc текстове, съставени от комуникационни специалисти. Със сигурност е най -известният заместващ текст дори ако има различни версии, които се различават от реда, в който се повтарят латинските думи. Lorem ipsum съдържа шрифтове , които се използват повече, аспект което ви позволява да имате преглед на изобразяването на текста по отношение на избор на шрифт an d размер на шрифта.",
                            Education = "Когато се отнася до Lorem ipsum, се използват различни изрази, а именно текст за попълване, измислен текст, сляп текст или заместващ текст: накратко, значението му също може да бъде нула, но полезността му е толкова ясна, че да мине през вековете и да устои на ироничните и модерни версии, дошли с появата на мрежата.",
                            Egn = "7609186138",
                            IsOutOfCompany = false,
                            ProfileImageUrl = "https://superdoc.bg/photos/doctors/large/TZc5jzdK6wotBMXwSYmKe5aPTV2FSiIOC9BEas4n.jpg",
                            Representation = "Lorem ipsum dolor sit amet. Графичните и типографските оператори знаят това добре, в действителност всички професии, занимаващи се с комуникационната вселена, имат стабилна връзка с тези думи, но какво е това? Lorem ipsum е фиктивен текст без никакъв смисъл.",
                            SheduleId = 2,
                            SpecialtyId = 60
                        },
                        new
                        {
                            Id = "806c57bf-bdca-469d-9649-3985a08581fb",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "867e4566-9082-42b9-abb7-bd59277ba8a0",
                            Email = "k_atanasova@mc-bg.com",
                            EmailConfirmed = false,
                            FirstName = "Кристина",
                            GenderId = 2,
                            JoinOnDate = "18.11.2022",
                            LastName = "Атанасова",
                            LockoutEnabled = false,
                            NormalizedEmail = "K_ATANASOVA@MC-BG.COM",
                            NormalizedUserName = "K_ATANASOVA",
                            PasswordHash = "AQAAAAEAACcQAAAAEHUtOU6fWyls46kiSji+/eMrSunXLMVAi2Vy/HX0X4KEYJP+c5yIoQAZjGdLkxwjRA==",
                            PhoneNumber = "+359888888116",
                            PhoneNumberConfirmed = false,
                            Role = "Doctor",
                            SecurityStamp = "3dbbf63c-b6b5-447a-a651-e7f0acbecadb",
                            TwoFactorEnabled = false,
                            UserName = "k_atanasova",
                            Biography = "Това е поредица от латински думи които, както са позиционирани, не образувайте изречения с пълен смисъл, а дайте живот на тестов текст, полезен за запълване на пространства, които впоследствие ще бъдат заети от ad hoc текстове, съставени от комуникационни специалисти. Със сигурност е най -известният заместващ текст дори ако има различни версии, които се различават от реда, в който се повтарят латинските думи. Lorem ipsum съдържа шрифтове , които се използват повече, аспект което ви позволява да имате преглед на изобразяването на текста по отношение на избор на шрифт an d размер на шрифта.",
                            Education = "Когато се отнася до Lorem ipsum, се използват различни изрази, а именно текст за попълване, измислен текст, сляп текст или заместващ текст: накратко, значението му също може да бъде нула, но полезността му е толкова ясна, че да мине през вековете и да устои на ироничните и модерни версии, дошли с появата на мрежата.",
                            Egn = "8606163716",
                            IsOutOfCompany = false,
                            ProfileImageUrl = "https://superdoc.bg/photos/doctors/large/pStJIXh9QsqC47STGxxsZ9bh3pcS1oddaBF6HR6q.jpg",
                            Representation = "Lorem ipsum dolor sit amet. Графичните и типографските оператори знаят това добре, в действителност всички професии, занимаващи се с комуникационната вселена, имат стабилна връзка с тези думи, но какво е това? Lorem ipsum е фиктивен текст без никакъв смисъл.",
                            SheduleId = 1,
                            SpecialtyId = 75
                        },
                        new
                        {
                            Id = "1911a5dc-90ad-417e-9a6c-0466b45d11ec",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "c7c4b923-1f28-496a-b1be-e70b0d388650",
                            Email = "g_kuchukov@mc-bg.com",
                            EmailConfirmed = false,
                            FirstName = "Георги",
                            GenderId = 1,
                            JoinOnDate = "18.11.2022",
                            LastName = "Кичуков",
                            LockoutEnabled = false,
                            NormalizedEmail = "G_KUCHUKOV@MC-BG.COM",
                            NormalizedUserName = "G_KUCHUKOV",
                            PasswordHash = "AQAAAAEAACcQAAAAENkB1FSsq80ERwNQHKVsTOnQqGLPayIohhVCtvhBE50YlbY4XS/owO6kgZP0BpHgMw==",
                            PhoneNumber = "+359888888117",
                            PhoneNumberConfirmed = false,
                            Role = "Doctor",
                            SecurityStamp = "06a702be-5037-4eab-8798-c99f84d90c75",
                            TwoFactorEnabled = false,
                            UserName = "g_kuchukov",
                            Biography = "Това е поредица от латински думи които, както са позиционирани, не образувайте изречения с пълен смисъл, а дайте живот на тестов текст, полезен за запълване на пространства, които впоследствие ще бъдат заети от ad hoc текстове, съставени от комуникационни специалисти. Със сигурност е най -известният заместващ текст дори ако има различни версии, които се различават от реда, в който се повтарят латинските думи. Lorem ipsum съдържа шрифтове , които се използват повече, аспект което ви позволява да имате преглед на изобразяването на текста по отношение на избор на шрифт an d размер на шрифта.",
                            Education = "Когато се отнася до Lorem ipsum, се използват различни изрази, а именно текст за попълване, измислен текст, сляп текст или заместващ текст: накратко, значението му също може да бъде нула, но полезността му е толкова ясна, че да мине през вековете и да устои на ироничните и модерни версии, дошли с появата на мрежата.",
                            Egn = "9002041303",
                            IsOutOfCompany = false,
                            ProfileImageUrl = "https://superdoc.bg/photos/doctors/large/gNyJ8eWCA6kTBdW0bXVw4nboWDXzFeIYQ1TFwPo7.jpg",
                            Representation = "Lorem ipsum dolor sit amet. Графичните и типографските оператори знаят това добре, в действителност всички професии, занимаващи се с комуникационната вселена, имат стабилна връзка с тези думи, но какво е това? Lorem ipsum е фиктивен текст без никакъв смисъл.",
                            SheduleId = 2,
                            SpecialtyId = 75
                        },
                        new
                        {
                            Id = "f3e2b623-5345-4df7-a21c-d7dd03cfecde",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "adbd62ca-ddaa-4942-9008-61c281ce7b7a",
                            Email = "k_stoicheva@mc-bg.com",
                            EmailConfirmed = false,
                            FirstName = "Катина",
                            GenderId = 2,
                            JoinOnDate = "18.11.2022",
                            LastName = "Стойчева",
                            LockoutEnabled = false,
                            NormalizedEmail = "K_STOICHEVA@MC-BG.COM",
                            NormalizedUserName = "K_STOICHEVA",
                            PasswordHash = "AQAAAAEAACcQAAAAEB7t4XBxgdUDgdzOQi33zKT8fklf6VDuuGEVcgi73q6xeH7apQF0G0gEMYTf1Tmv+g==",
                            PhoneNumber = "+359888888118",
                            PhoneNumberConfirmed = false,
                            Role = "Doctor",
                            SecurityStamp = "c69d1518-5803-477e-8ae7-1bcd66b1d340",
                            TwoFactorEnabled = false,
                            UserName = "k_stoicheva",
                            Biography = "Това е поредица от латински думи които, както са позиционирани, не образувайте изречения с пълен смисъл, а дайте живот на тестов текст, полезен за запълване на пространства, които впоследствие ще бъдат заети от ad hoc текстове, съставени от комуникационни специалисти. Със сигурност е най -известният заместващ текст дори ако има различни версии, които се различават от реда, в който се повтарят латинските думи. Lorem ipsum съдържа шрифтове , които се използват повече, аспект което ви позволява да имате преглед на изобразяването на текста по отношение на избор на шрифт an d размер на шрифта.",
                            Education = "Когато се отнася до Lorem ipsum, се използват различни изрази, а именно текст за попълване, измислен текст, сляп текст или заместващ текст: накратко, значението му също може да бъде нула, но полезността му е толкова ясна, че да мине през вековете и да устои на ироничните и модерни версии, дошли с появата на мрежата.",
                            Egn = "7801138974",
                            IsOutOfCompany = false,
                            ProfileImageUrl = "https://superdoc.bg/photos/doctors/large/DkyVrk4ptD2UAPgywGJp9Sk4ab2mowCTJnWgC7uP.jpg",
                            Representation = "Lorem ipsum dolor sit amet. Графичните и типографските оператори знаят това добре, в действителност всички професии, занимаващи се с комуникационната вселена, имат стабилна връзка с тези думи, но какво е това? Lorem ipsum е фиктивен текст без никакъв смисъл.",
                            SheduleId = 1,
                            SpecialtyId = 76
                        },
                        new
                        {
                            Id = "95c8e6cf-ec17-4596-985a-b6ec273687d3",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "ee2d474b-a626-4757-b0e5-00f4a485c9cb",
                            Email = "n_paskov@mc-bg.com",
                            EmailConfirmed = false,
                            FirstName = "Николай",
                            GenderId = 1,
                            JoinOnDate = "18.11.2022",
                            LastName = "Пасков",
                            LockoutEnabled = false,
                            NormalizedEmail = "N_PASKOV@MC-BG.COM",
                            NormalizedUserName = "N_PASKOV",
                            PasswordHash = "AQAAAAEAACcQAAAAEMAOYRJc10MSXkkGWArDKpnV9OSqNIGuB8HJiMMppaQNEGlscOSuqtmQZv/ejHLLgQ==",
                            PhoneNumber = "+359888888119",
                            PhoneNumberConfirmed = false,
                            Role = "Doctor",
                            SecurityStamp = "eaf3d0e8-b4b8-461d-bb74-1bc973abb59f",
                            TwoFactorEnabled = false,
                            UserName = "n_paskov",
                            Biography = "Това е поредица от латински думи които, както са позиционирани, не образувайте изречения с пълен смисъл, а дайте живот на тестов текст, полезен за запълване на пространства, които впоследствие ще бъдат заети от ad hoc текстове, съставени от комуникационни специалисти. Със сигурност е най -известният заместващ текст дори ако има различни версии, които се различават от реда, в който се повтарят латинските думи. Lorem ipsum съдържа шрифтове , които се използват повече, аспект което ви позволява да имате преглед на изобразяването на текста по отношение на избор на шрифт an d размер на шрифта.",
                            Education = "Когато се отнася до Lorem ipsum, се използват различни изрази, а именно текст за попълване, измислен текст, сляп текст или заместващ текст: накратко, значението му също може да бъде нула, но полезността му е толкова ясна, че да мине през вековете и да устои на ироничните и модерни версии, дошли с появата на мрежата.",
                            Egn = "9103145306",
                            IsOutOfCompany = false,
                            ProfileImageUrl = "https://superdoc.bg/photos/doctors/large/KHFCpB4AiRP1yZBJm5tSUeukKgA1PBmFVZs2CfgF.jpg",
                            Representation = "Lorem ipsum dolor sit amet. Графичните и типографските оператори знаят това добре, в действителност всички професии, занимаващи се с комуникационната вселена, имат стабилна връзка с тези думи, но какво е това? Lorem ipsum е фиктивен текст без никакъв смисъл.",
                            SheduleId = 2,
                            SpecialtyId = 76
                        },
                        new
                        {
                            Id = "8bc6eca9-07fe-49c3-bf11-8b2afa117b9c",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "322de372-d412-4a2b-85dc-de5c31c5d430",
                            Email = "r_uzunova@mc-bg.com",
                            EmailConfirmed = false,
                            FirstName = "Росица",
                            GenderId = 2,
                            JoinOnDate = "18.11.2022",
                            LastName = "Узунова",
                            LockoutEnabled = false,
                            NormalizedEmail = "R_UZUNOVA@MC-BG.COM",
                            NormalizedUserName = "R_UZUNOVA",
                            PasswordHash = "AQAAAAEAACcQAAAAEFUFNRTAR2GNvKyAwXOpBdmaDGvzoWPsaQOtgYdrg0sF3ZVQBjS2L1fv6d88VO0IEQ==",
                            PhoneNumber = "+359888888120",
                            PhoneNumberConfirmed = false,
                            Role = "Doctor",
                            SecurityStamp = "2fcf5dfe-965e-436a-b5dd-4266bc0cbf6d",
                            TwoFactorEnabled = false,
                            UserName = "r_uzunova",
                            Biography = "Това е поредица от латински думи които, както са позиционирани, не образувайте изречения с пълен смисъл, а дайте живот на тестов текст, полезен за запълване на пространства, които впоследствие ще бъдат заети от ad hoc текстове, съставени от комуникационни специалисти. Със сигурност е най -известният заместващ текст дори ако има различни версии, които се различават от реда, в който се повтарят латинските думи. Lorem ipsum съдържа шрифтове , които се използват повече, аспект което ви позволява да имате преглед на изобразяването на текста по отношение на избор на шрифт an d размер на шрифта.",
                            Education = "Когато се отнася до Lorem ipsum, се използват различни изрази, а именно текст за попълване, измислен текст, сляп текст или заместващ текст: накратко, значението му също може да бъде нула, но полезността му е толкова ясна, че да мине през вековете и да устои на ироничните и модерни версии, дошли с появата на мрежата.",
                            Egn = "7512158631",
                            IsOutOfCompany = false,
                            ProfileImageUrl = "https://superdoc.bg/photos/doctors/large/AdMojtPGEnem4J2MjHZlE5aH5Ykvm007PjfvAgwe.jpg",
                            Representation = "Lorem ipsum dolor sit amet. Графичните и типографските оператори знаят това добре, в действителност всички професии, занимаващи се с комуникационната вселена, имат стабилна връзка с тези думи, но какво е това? Lorem ipsum е фиктивен текст без никакъв смисъл.",
                            SheduleId = 1,
                            SpecialtyId = 77
                        },
                        new
                        {
                            Id = "89801c76-3f5e-4414-a3fc-482eea5bc8da",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "32577f4f-dc4e-4775-8e5f-e2ec08588833",
                            Email = "i_belcheva@mc-bg.com",
                            EmailConfirmed = false,
                            FirstName = "Ирина",
                            GenderId = 2,
                            JoinOnDate = "18.11.2022",
                            LastName = "Белчева",
                            LockoutEnabled = false,
                            NormalizedEmail = "I_BELCHEVA@MC-BG.COM",
                            NormalizedUserName = "I_BELCHEVA",
                            PasswordHash = "AQAAAAEAACcQAAAAEPJyXS/IxcicnbCzGELuotroMSnFjTsJBHAUCAJQ2rwavZwdqHwdYQLXk4w30QlDMQ==",
                            PhoneNumber = "+359888888121",
                            PhoneNumberConfirmed = false,
                            Role = "Doctor",
                            SecurityStamp = "b2a01160-a4ea-4a56-a82f-b06e44fdfe53",
                            TwoFactorEnabled = false,
                            UserName = "i_belcheva",
                            Biography = "Това е поредица от латински думи които, както са позиционирани, не образувайте изречения с пълен смисъл, а дайте живот на тестов текст, полезен за запълване на пространства, които впоследствие ще бъдат заети от ad hoc текстове, съставени от комуникационни специалисти. Със сигурност е най -известният заместващ текст дори ако има различни версии, които се различават от реда, в който се повтарят латинските думи. Lorem ipsum съдържа шрифтове , които се използват повече, аспект което ви позволява да имате преглед на изобразяването на текста по отношение на избор на шрифт an d размер на шрифта.",
                            Education = "Когато се отнася до Lorem ipsum, се използват различни изрази, а именно текст за попълване, измислен текст, сляп текст или заместващ текст: накратко, значението му също може да бъде нула, но полезността му е толкова ясна, че да мине през вековете и да устои на ироничните и модерни версии, дошли с появата на мрежата.",
                            Egn = "7512158992",
                            IsOutOfCompany = false,
                            ProfileImageUrl = "https://superdoc.bg/photos/doctors/large/LcJF7zG1uWkPqYfBDOAGFqlpA6AVoJOahfaFaRoe.jpeg",
                            Representation = "Lorem ipsum dolor sit amet. Графичните и типографските оператори знаят това добре, в действителност всички професии, занимаващи се с комуникационната вселена, имат стабилна връзка с тези думи, но какво е това? Lorem ipsum е фиктивен текст без никакъв смисъл.",
                            SheduleId = 2,
                            SpecialtyId = 77
                        });
                });

            modelBuilder.Entity("MedicalCenter.Infrastructure.Data.Models.Examination", b =>
                {
                    b.HasOne("MedicalCenter.Infrastructure.Data.Models.Doctor", "Doctor")
                        .WithMany("DoctorExaminations")
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MedicalCenter.Infrastructure.Data.Models.Review", "Review")
                        .WithMany()
                        .HasForeignKey("ReviewId");

                    b.HasOne("MedicalCenter.Infrastructure.Data.Models.Shedule", "Shedule")
                        .WithMany()
                        .HasForeignKey("SheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MedicalCenter.Infrastructure.Data.Models.User", "User")
                        .WithMany("UserExaminations")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Doctor");

                    b.Navigation("Review");

                    b.Navigation("Shedule");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MedicalCenter.Infrastructure.Data.Models.Review", b =>
                {
                    b.HasOne("MedicalCenter.Infrastructure.Data.Models.Doctor", "Doctor")
                        .WithMany("DoctorReviews")
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MedicalCenter.Infrastructure.Data.Models.User", "User")
                        .WithMany("UserReviews")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Doctor");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MedicalCenter.Infrastructure.Data.Models.WorkHour", b =>
                {
                    b.HasOne("MedicalCenter.Infrastructure.Data.Models.Shedule", "Shedule")
                        .WithMany("WorkHours")
                        .HasForeignKey("SheduleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Shedule");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("MedicalCenter.Infrastructure.Data.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("MedicalCenter.Infrastructure.Data.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MedicalCenter.Infrastructure.Data.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("MedicalCenter.Infrastructure.Data.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MedicalCenter.Infrastructure.Data.Models.Doctor", b =>
                {
                    b.HasOne("MedicalCenter.Infrastructure.Data.Models.Shedule", "Shedule")
                        .WithMany("Doctors")
                        .HasForeignKey("SheduleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MedicalCenter.Infrastructure.Data.Models.Specialty", "Specialty")
                        .WithMany("Doctors")
                        .HasForeignKey("SpecialtyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Shedule");

                    b.Navigation("Specialty");
                });

            modelBuilder.Entity("MedicalCenter.Infrastructure.Data.Models.Shedule", b =>
                {
                    b.Navigation("Doctors");

                    b.Navigation("WorkHours");
                });

            modelBuilder.Entity("MedicalCenter.Infrastructure.Data.Models.Specialty", b =>
                {
                    b.Navigation("Doctors");
                });

            modelBuilder.Entity("MedicalCenter.Infrastructure.Data.Models.User", b =>
                {
                    b.Navigation("UserExaminations");

                    b.Navigation("UserReviews");
                });

            modelBuilder.Entity("MedicalCenter.Infrastructure.Data.Models.Doctor", b =>
                {
                    b.Navigation("DoctorExaminations");

                    b.Navigation("DoctorReviews");
                });
#pragma warning restore 612, 618
        }
    }
}
