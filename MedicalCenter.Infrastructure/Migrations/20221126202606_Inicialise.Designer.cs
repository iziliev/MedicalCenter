// <auto-generated />
using System;
using MedicalCenter.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MedicalCenter.Infrastructure.Migrations
{
    [DbContext(typeof(MedicalCenterDbContext))]
    [Migration("20221126202606_Inicialise")]
    partial class Inicialise
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MedicalCenter.Infrastructure.Data.Models.Examination", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("DoctorFullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DoctorId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DoctorPhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hour")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUserReviewedExamination")
                        .HasColumnType("bit");

                    b.Property<string>("ReviewId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("SheduleId")
                        .HasColumnType("int");

                    b.Property<int>("SpecialityId")
                        .HasColumnType("int");

                    b.Property<string>("UserFullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserPhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DoctorId");

                    b.HasIndex("ReviewId");

                    b.HasIndex("SheduleId");

                    b.HasIndex("UserId");

                    b.ToTable("Examinations");
                });

            modelBuilder.Entity("MedicalCenter.Infrastructure.Data.Models.Gender", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Genders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Мъж"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Жена"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Не посочвам"
                        });
                });

            modelBuilder.Entity("MedicalCenter.Infrastructure.Data.Models.Review", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DoctorId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("DoctorId");

                    b.HasIndex("UserId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("MedicalCenter.Infrastructure.Data.Models.Shedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Shedules");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Първа смяна"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Втора смяна"
                        });
                });

            modelBuilder.Entity("MedicalCenter.Infrastructure.Data.Models.Specialty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Specialties");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Акушер-гинеколог"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Алерголог"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Алтернативна медицина"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Ангиолог"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Анестезиолог"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Боуен терапевт"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Вирусолог"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Вътрешни болести"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Гастроентеролог"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Гръден хирург"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Дерматолог"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Детски гастроентеролог"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Детски ендокринолог"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Детски кардиолог"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Детски невролог"
                        },
                        new
                        {
                            Id = 16,
                            Name = "Детски нефролог"
                        },
                        new
                        {
                            Id = 17,
                            Name = "Детски психиатър"
                        },
                        new
                        {
                            Id = 18,
                            Name = "Детски пулмолог"
                        },
                        new
                        {
                            Id = 19,
                            Name = "Детски ревматолог"
                        },
                        new
                        {
                            Id = 20,
                            Name = "Детски хематолог"
                        },
                        new
                        {
                            Id = 21,
                            Name = "Детски хирург"
                        },
                        new
                        {
                            Id = 22,
                            Name = "Диетолог"
                        },
                        new
                        {
                            Id = 23,
                            Name = "Ендодонт"
                        },
                        new
                        {
                            Id = 24,
                            Name = "Ендокринолог"
                        },
                        new
                        {
                            Id = 25,
                            Name = "Естетичен дерматолог"
                        },
                        new
                        {
                            Id = 26,
                            Name = "Зъболекар (Стоматолог)"
                        },
                        new
                        {
                            Id = 27,
                            Name = "Изследване"
                        },
                        new
                        {
                            Id = 28,
                            Name = "Имплантолог"
                        },
                        new
                        {
                            Id = 29,
                            Name = "Имунолог"
                        },
                        new
                        {
                            Id = 30,
                            Name = "Инфекциозни болести"
                        },
                        new
                        {
                            Id = 31,
                            Name = "Кардиолог"
                        },
                        new
                        {
                            Id = 32,
                            Name = "Кардиохирург"
                        },
                        new
                        {
                            Id = 33,
                            Name = "Кинезитерапевт"
                        },
                        new
                        {
                            Id = 34,
                            Name = "Клинична лаборатория"
                        },
                        new
                        {
                            Id = 35,
                            Name = "Коуч"
                        },
                        new
                        {
                            Id = 36,
                            Name = "Лицево-челюстен хирург"
                        },
                        new
                        {
                            Id = 37,
                            Name = "Логопед"
                        },
                        new
                        {
                            Id = 38,
                            Name = "Лъчетерапевт"
                        },
                        new
                        {
                            Id = 39,
                            Name = "Мамолог"
                        },
                        new
                        {
                            Id = 40,
                            Name = "Манипулация"
                        },
                        new
                        {
                            Id = 41,
                            Name = "Медицинска генетика"
                        },
                        new
                        {
                            Id = 42,
                            Name = "Медицинска сестра"
                        },
                        new
                        {
                            Id = 43,
                            Name = "Микробиолог"
                        },
                        new
                        {
                            Id = 44,
                            Name = "Невролог"
                        },
                        new
                        {
                            Id = 45,
                            Name = "Неврохирург"
                        },
                        new
                        {
                            Id = 46,
                            Name = "Неонатолог"
                        },
                        new
                        {
                            Id = 47,
                            Name = "Нефролог (Бъбречни болести)"
                        },
                        new
                        {
                            Id = 48,
                            Name = "Образна диагностика"
                        },
                        new
                        {
                            Id = 49,
                            Name = "бщопрактикуващ лекар"
                        },
                        new
                        {
                            Id = 50,
                            Name = "Озонотерапевт"
                        },
                        new
                        {
                            Id = 51,
                            Name = "Онколог"
                        },
                        new
                        {
                            Id = 52,
                            Name = "Оптометрист (Очен оптик)"
                        },
                        new
                        {
                            Id = 53,
                            Name = "Орален хирург"
                        },
                        new
                        {
                            Id = 54,
                            Name = "Ортодонт"
                        },
                        new
                        {
                            Id = 55,
                            Name = "Ортопед"
                        },
                        new
                        {
                            Id = 56,
                            Name = "Отоневролог"
                        },
                        new
                        {
                            Id = 57,
                            Name = "Офталмолог (Очен лекар)"
                        },
                        new
                        {
                            Id = 58,
                            Name = "Паразитолог"
                        },
                        new
                        {
                            Id = 59,
                            Name = "Пародонтолог"
                        },
                        new
                        {
                            Id = 60,
                            Name = "Педиатър"
                        },
                        new
                        {
                            Id = 61,
                            Name = "Пластичен хирург"
                        },
                        new
                        {
                            Id = 62,
                            Name = "Подиатър (Болести на ходилото)"
                        },
                        new
                        {
                            Id = 63,
                            Name = "Протетик"
                        },
                        new
                        {
                            Id = 64,
                            Name = "Профилактични прегледи"
                        },
                        new
                        {
                            Id = 65,
                            Name = "Психиатър"
                        },
                        new
                        {
                            Id = 66,
                            Name = "Психолог"
                        },
                        new
                        {
                            Id = 67,
                            Name = "Психотерапевт"
                        },
                        new
                        {
                            Id = 68,
                            Name = "Пулмолог (Белодробни болести)"
                        },
                        new
                        {
                            Id = 69,
                            Name = "Ревматолог"
                        },
                        new
                        {
                            Id = 70,
                            Name = "Репродуктивна медицина"
                        },
                        new
                        {
                            Id = 71,
                            Name = "Рехабилитатор"
                        },
                        new
                        {
                            Id = 72,
                            Name = "Спортна медицина"
                        },
                        new
                        {
                            Id = 73,
                            Name = "Съдов хирург"
                        },
                        new
                        {
                            Id = 74,
                            Name = "Токсиколог"
                        },
                        new
                        {
                            Id = 75,
                            Name = "УНГ"
                        },
                        new
                        {
                            Id = 76,
                            Name = "Уролог"
                        },
                        new
                        {
                            Id = 77,
                            Name = "Физиотерапевт"
                        },
                        new
                        {
                            Id = 78,
                            Name = "Хематолог (Клинична хематология)"
                        },
                        new
                        {
                            Id = 79,
                            Name = "Хематолог (Трансфузионна хематология)"
                        },
                        new
                        {
                            Id = 80,
                            Name = "Хирург"
                        },
                        new
                        {
                            Id = 81,
                            Name = "Хомеопат"
                        });
                });

            modelBuilder.Entity("MedicalCenter.Infrastructure.Data.Models.Test", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Hct")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hgb")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LaboratoryPatientId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MCH")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MCHC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MCV")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Plt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RBC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TestDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UrineGravity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrinepH")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WBC")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LaboratoryPatientId");

                    b.ToTable("Tests");
                });

            modelBuilder.Entity("MedicalCenter.Infrastructure.Data.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int>("GenderId")
                        .HasColumnType("int");

                    b.Property<string>("JoinOnDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasDiscriminator<string>("Discriminator").HasValue("User");

                    b.HasData(
                        new
                        {
                            Id = "89e45214-693d-489a-a301-765fffa3eee3",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "7190bc73-d3d2-45ca-8fd2-f538787c9ab9",
                            Email = "admin@mc-bg.com",
                            EmailConfirmed = false,
                            FirstName = "Ивайло",
                            GenderId = 1,
                            LastName = "Илиев",
                            LockoutEnabled = false,
                            NormalizedEmail = "ADMIN@MC-BG.COM",
                            NormalizedUserName = "ADMIN",
                            PasswordHash = "AQAAAAEAACcQAAAAEHHO4TCtdBg9lqshl4mgcq4UNdl+xbY35bcAcGd6NhXbjAT8DeLtasRvJ1R40ZNmWQ==",
                            PhoneNumber = "+359888888888",
                            PhoneNumberConfirmed = false,
                            Role = "Administrator",
                            SecurityStamp = "3c7eb121-9415-4f12-9fe8-10b523ede8f8",
                            TwoFactorEnabled = false,
                            UserName = "admin"
                        });
                });

            modelBuilder.Entity("MedicalCenter.Infrastructure.Data.Models.WorkHour", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Hour")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SheduleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SheduleId");

                    b.ToTable("WorkHours");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Hour = "08:00",
                            SheduleId = 1
                        },
                        new
                        {
                            Id = 2,
                            Hour = "08:30",
                            SheduleId = 1
                        },
                        new
                        {
                            Id = 3,
                            Hour = "09:00",
                            SheduleId = 1
                        },
                        new
                        {
                            Id = 4,
                            Hour = "09:30",
                            SheduleId = 1
                        },
                        new
                        {
                            Id = 5,
                            Hour = "10:00",
                            SheduleId = 1
                        },
                        new
                        {
                            Id = 6,
                            Hour = "10:30",
                            SheduleId = 1
                        },
                        new
                        {
                            Id = 7,
                            Hour = "11:00",
                            SheduleId = 1
                        },
                        new
                        {
                            Id = 8,
                            Hour = "11:30",
                            SheduleId = 1
                        },
                        new
                        {
                            Id = 9,
                            Hour = "13:00",
                            SheduleId = 2
                        },
                        new
                        {
                            Id = 10,
                            Hour = "13:30",
                            SheduleId = 2
                        },
                        new
                        {
                            Id = 11,
                            Hour = "14:00",
                            SheduleId = 2
                        },
                        new
                        {
                            Id = 12,
                            Hour = "14:30",
                            SheduleId = 2
                        },
                        new
                        {
                            Id = 13,
                            Hour = "15:00",
                            SheduleId = 2
                        },
                        new
                        {
                            Id = 14,
                            Hour = "15:30",
                            SheduleId = 2
                        },
                        new
                        {
                            Id = 15,
                            Hour = "16:00",
                            SheduleId = 2
                        },
                        new
                        {
                            Id = 16,
                            Hour = "16:30",
                            SheduleId = 2
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "4ec445ec-71c0-4102-a65f-d76b5c2eea1d",
                            ConcurrencyStamp = "3f924dd0-a7c1-410d-b80a-196f4855c03c",
                            Name = "Administrator",
                            NormalizedName = "ADMINISTRATOR"
                        },
                        new
                        {
                            Id = "d0258995-a3b5-4bb8-8828-cb103fc4fdc4",
                            ConcurrencyStamp = "e6246a64-0ac8-4bba-9741-2ba818f83f20",
                            Name = "Doctor",
                            NormalizedName = "DOCTOR"
                        },
                        new
                        {
                            Id = "89a85122-28b7-411c-ab32-bf0f67829b66",
                            ConcurrencyStamp = "ffd20b28-7b5d-4813-af4b-24a7807e43ce",
                            Name = "User",
                            NormalizedName = "USER"
                        },
                        new
                        {
                            Id = "e2695c3b-312a-4810-bcc7-d0f7e0bb2056",
                            ConcurrencyStamp = "1cf5e042-13cf-4dda-b4b5-a9ddb4f25c60",
                            Name = "Laborant",
                            NormalizedName = "LABORANT"
                        },
                        new
                        {
                            Id = "125979d4-285a-4dfd-9491-296800a62407",
                            ConcurrencyStamp = "3027f21f-cf59-47d4-a7aa-119db7a02136",
                            Name = "LaboratoryUser",
                            NormalizedName = "LABORATORYUSER"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "89e45214-693d-489a-a301-765fffa3eee3",
                            RoleId = "4ec445ec-71c0-4102-a65f-d76b5c2eea1d"
                        },
                        new
                        {
                            UserId = "54ed1806-7b2e-4630-a093-3b648d23fc31",
                            RoleId = "d0258995-a3b5-4bb8-8828-cb103fc4fdc4"
                        },
                        new
                        {
                            UserId = "64983f38-eb20-4ed8-a123-733a1818cc1b",
                            RoleId = "d0258995-a3b5-4bb8-8828-cb103fc4fdc4"
                        },
                        new
                        {
                            UserId = "54cc8370-4f7e-426e-b87e-638babf251cf",
                            RoleId = "d0258995-a3b5-4bb8-8828-cb103fc4fdc4"
                        },
                        new
                        {
                            UserId = "5be51ba1-c561-4eab-8b62-62b6dc6ce63d",
                            RoleId = "d0258995-a3b5-4bb8-8828-cb103fc4fdc4"
                        },
                        new
                        {
                            UserId = "ecc1a5c4-e551-40b8-9a5a-5672b02dadce",
                            RoleId = "d0258995-a3b5-4bb8-8828-cb103fc4fdc4"
                        },
                        new
                        {
                            UserId = "cc887dfc-07e0-4f85-9698-58b083c9d203",
                            RoleId = "d0258995-a3b5-4bb8-8828-cb103fc4fdc4"
                        },
                        new
                        {
                            UserId = "8942bbd7-6192-4d01-b614-85611032b092",
                            RoleId = "d0258995-a3b5-4bb8-8828-cb103fc4fdc4"
                        },
                        new
                        {
                            UserId = "844bbc19-5543-4c93-8ebe-48bebbda2a3f",
                            RoleId = "d0258995-a3b5-4bb8-8828-cb103fc4fdc4"
                        },
                        new
                        {
                            UserId = "175669b4-d817-4ffa-be49-bc9d3b1ba989",
                            RoleId = "d0258995-a3b5-4bb8-8828-cb103fc4fdc4"
                        },
                        new
                        {
                            UserId = "d918bc07-d778-4cce-a106-e1bcb1936834",
                            RoleId = "d0258995-a3b5-4bb8-8828-cb103fc4fdc4"
                        },
                        new
                        {
                            UserId = "376dff86-4ac3-42ae-8ecd-09179501375a",
                            RoleId = "d0258995-a3b5-4bb8-8828-cb103fc4fdc4"
                        },
                        new
                        {
                            UserId = "6af3c0a7-50cd-492f-b442-c3b9580d069b",
                            RoleId = "d0258995-a3b5-4bb8-8828-cb103fc4fdc4"
                        },
                        new
                        {
                            UserId = "5759467e-c4b9-4401-9996-dea77ec90334",
                            RoleId = "d0258995-a3b5-4bb8-8828-cb103fc4fdc4"
                        },
                        new
                        {
                            UserId = "8805ea81-ea7a-4d40-9fc1-191d22340bfc",
                            RoleId = "d0258995-a3b5-4bb8-8828-cb103fc4fdc4"
                        },
                        new
                        {
                            UserId = "621f586d-b181-4988-9d71-9b01b9449d03",
                            RoleId = "d0258995-a3b5-4bb8-8828-cb103fc4fdc4"
                        },
                        new
                        {
                            UserId = "bca07549-6ac1-4c56-9900-38a8e2ae187e",
                            RoleId = "d0258995-a3b5-4bb8-8828-cb103fc4fdc4"
                        },
                        new
                        {
                            UserId = "8cba7a06-5661-4493-9258-f06852fa600b",
                            RoleId = "d0258995-a3b5-4bb8-8828-cb103fc4fdc4"
                        },
                        new
                        {
                            UserId = "3db948c1-c8db-44e2-86e7-22dbb07ebdc9",
                            RoleId = "d0258995-a3b5-4bb8-8828-cb103fc4fdc4"
                        },
                        new
                        {
                            UserId = "50fec4aa-3d81-4ace-976a-92a69270665e",
                            RoleId = "d0258995-a3b5-4bb8-8828-cb103fc4fdc4"
                        },
                        new
                        {
                            UserId = "210a129b-db07-4226-9cf4-11ee66f092e9",
                            RoleId = "d0258995-a3b5-4bb8-8828-cb103fc4fdc4"
                        },
                        new
                        {
                            UserId = "a9b5296a-7e2b-41f7-9159-7834fb469ed0",
                            RoleId = "d0258995-a3b5-4bb8-8828-cb103fc4fdc4"
                        },
                        new
                        {
                            UserId = "0314e169-7bcb-451c-9300-23250e8e7411",
                            RoleId = "d0258995-a3b5-4bb8-8828-cb103fc4fdc4"
                        },
                        new
                        {
                            UserId = "2d8d50b4-449f-41e3-aea4-81b4b67a8880",
                            RoleId = "e2695c3b-312a-4810-bcc7-d0f7e0bb2056"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("MedicalCenter.Infrastructure.Data.Models.Doctor", b =>
                {
                    b.HasBaseType("MedicalCenter.Infrastructure.Data.Models.User");

                    b.Property<string>("Biography")
                        .IsRequired()
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Education")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Egn")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("Doctor_Egn");

                    b.Property<bool>("IsOutOfCompany")
                        .HasColumnType("bit")
                        .HasColumnName("Doctor_IsOutOfCompany");

                    b.Property<string>("OutOnDate")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Doctor_OutOnDate");

                    b.Property<string>("ProfileImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Representation")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("SheduleId")
                        .HasColumnType("int");

                    b.Property<int>("SpecialtyId")
                        .HasColumnType("int");

                    b.HasIndex("SheduleId");

                    b.HasIndex("SpecialtyId");

                    b.HasDiscriminator().HasValue("Doctor");

                    b.HasData(
                        new
                        {
                            Id = "54ed1806-7b2e-4630-a093-3b648d23fc31",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "cc80c6b1-22a5-4f8b-816d-287308468678",
                            Email = "m_monastirska@mc-bg.com",
                            EmailConfirmed = false,
                            FirstName = "Маргарита",
                            GenderId = 2,
                            JoinOnDate = "26.11.2022",
                            LastName = "Монастирска",
                            LockoutEnabled = false,
                            NormalizedEmail = "M_MONASTIRSKA@MC-BG.COM",
                            NormalizedUserName = "M_MONASTIRSKA",
                            PasswordHash = "AQAAAAEAACcQAAAAELZ2+35g26K76sGG/lMq1PVaZZ4vyto9fXLHGhA+q4oDSTAgIUFq/5qgF0ADOUF5bQ==",
                            PhoneNumber = "+359888888100",
                            PhoneNumberConfirmed = false,
                            Role = "Doctor",
                            SecurityStamp = "4149893a-74a9-4f4c-a047-cb509b978ab3",
                            TwoFactorEnabled = false,
                            UserName = "m_monastirska",
                            Biography = "Това е поредица от латински думи които, както са позиционирани, не образувайте изречения с пълен смисъл, а дайте живот на тестов текст, полезен за запълване на пространства, които впоследствие ще бъдат заети от ad hoc текстове, съставени от комуникационни специалисти. Със сигурност е най -известният заместващ текст дори ако има различни версии, които се различават от реда, в който се повтарят латинските думи. Lorem ipsum съдържа шрифтове , които се използват повече, аспект което ви позволява да имате преглед на изобразяването на текста по отношение на избор на шрифт an d размер на шрифта.",
                            Education = "Когато се отнася до Lorem ipsum, се използват различни изрази, а именно текст за попълване, измислен текст, сляп текст или заместващ текст: накратко, значението му също може да бъде нула, но полезността му е толкова ясна, че да мине през вековете и да устои на ироничните и модерни версии, дошли с появата на мрежата.",
                            Egn = "7903129851",
                            IsOutOfCompany = false,
                            ProfileImageUrl = "https://i.imgur.com/9gZeKsk.jpg",
                            Representation = "Lorem ipsum dolor sit amet. Графичните и типографските оператори знаят това добре, в действителност всички професии, занимаващи се с комуникационната вселена, имат стабилна връзка с тези думи, но какво е това? Lorem ipsum е фиктивен текст без никакъв смисъл.",
                            SheduleId = 1,
                            SpecialtyId = 1
                        },
                        new
                        {
                            Id = "64983f38-eb20-4ed8-a123-733a1818cc1b",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "752b3873-f970-4b9c-8781-dae36d46632d",
                            Email = "s_slavchev@mc-bg.com",
                            EmailConfirmed = false,
                            FirstName = "Станислав",
                            GenderId = 1,
                            JoinOnDate = "26.11.2022",
                            LastName = "Славчев",
                            LockoutEnabled = false,
                            NormalizedEmail = "S_SLAVCHEV@MC-BG.COM",
                            NormalizedUserName = "S_SLAVCHEV",
                            PasswordHash = "AQAAAAEAACcQAAAAEG1GzWXKkcw0pdAHi5x1yxtApNPb9908IDESpc9necn+9IR5XUG9W52kGfRJcW7R2Q==",
                            PhoneNumber = "+359888888101",
                            PhoneNumberConfirmed = false,
                            Role = "Doctor",
                            SecurityStamp = "bc111541-003d-4836-be52-421b3fc2f11a",
                            TwoFactorEnabled = false,
                            UserName = "s_slavchev",
                            Biography = "Това е поредица от латински думи които, както са позиционирани, не образувайте изречения с пълен смисъл, а дайте живот на тестов текст, полезен за запълване на пространства, които впоследствие ще бъдат заети от ad hoc текстове, съставени от комуникационни специалисти. Със сигурност е най -известният заместващ текст дори ако има различни версии, които се различават от реда, в който се повтарят латинските думи. Lorem ipsum съдържа шрифтове , които се използват повече, аспект което ви позволява да имате преглед на изобразяването на текста по отношение на избор на шрифт an d размер на шрифта.",
                            Education = "Когато се отнася до Lorem ipsum, се използват различни изрази, а именно текст за попълване, измислен текст, сляп текст или заместващ текст: накратко, значението му също може да бъде нула, но полезността му е толкова ясна, че да мине през вековете и да устои на ироничните и модерни версии, дошли с появата на мрежата.",
                            Egn = "7512150522",
                            IsOutOfCompany = false,
                            ProfileImageUrl = "https://i.imgur.com/73peyhD.jpg",
                            Representation = "Lorem ipsum dolor sit amet. Графичните и типографските оператори знаят това добре, в действителност всички професии, занимаващи се с комуникационната вселена, имат стабилна връзка с тези думи, но какво е това? Lorem ipsum е фиктивен текст без никакъв смисъл.",
                            SheduleId = 2,
                            SpecialtyId = 1
                        },
                        new
                        {
                            Id = "54cc8370-4f7e-426e-b87e-638babf251cf",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "c96342ae-9137-47f1-a1e5-134ddddb8cb8",
                            Email = "b_petkova@mc-bg.com",
                            EmailConfirmed = false,
                            FirstName = "Бисерка",
                            GenderId = 2,
                            JoinOnDate = "26.11.2022",
                            LastName = "Петкова",
                            LockoutEnabled = false,
                            NormalizedEmail = "B_PETKOVA@MC-BG.COM",
                            NormalizedUserName = "B_PETKOVA",
                            PasswordHash = "AQAAAAEAACcQAAAAEJisyKWwiLa5u7SRc+hPke6B5jmbh9w/5Z66tfAfkvFuojcSvniTIJuz/XsBK50pYw==",
                            PhoneNumber = "+359888888102",
                            PhoneNumberConfirmed = false,
                            Role = "Doctor",
                            SecurityStamp = "9be0f607-39c0-4207-8ed6-f1fb34384e9d",
                            TwoFactorEnabled = false,
                            UserName = "b_petkova",
                            Biography = "Това е поредица от латински думи които, както са позиционирани, не образувайте изречения с пълен смисъл, а дайте живот на тестов текст, полезен за запълване на пространства, които впоследствие ще бъдат заети от ad hoc текстове, съставени от комуникационни специалисти. Със сигурност е най -известният заместващ текст дори ако има различни версии, които се различават от реда, в който се повтарят латинските думи. Lorem ipsum съдържа шрифтове , които се използват повече, аспект което ви позволява да имате преглед на изобразяването на текста по отношение на избор на шрифт an d размер на шрифта.",
                            Education = "Когато се отнася до Lorem ipsum, се използват различни изрази, а именно текст за попълване, измислен текст, сляп текст или заместващ текст: накратко, значението му също може да бъде нула, но полезността му е толкова ясна, че да мине през вековете и да устои на ироничните и модерни версии, дошли с появата на мрежата.",
                            Egn = "7412135099",
                            IsOutOfCompany = false,
                            ProfileImageUrl = "https://i.imgur.com/66UFmBy.jpg",
                            Representation = "Lorem ipsum dolor sit amet. Графичните и типографските оператори знаят това добре, в действителност всички професии, занимаващи се с комуникационната вселена, имат стабилна връзка с тези думи, но какво е това? Lorem ipsum е фиктивен текст без никакъв смисъл.",
                            SheduleId = 1,
                            SpecialtyId = 8
                        },
                        new
                        {
                            Id = "5be51ba1-c561-4eab-8b62-62b6dc6ce63d",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "89856650-3ed4-4464-9c70-a63f34a1e2dd",
                            Email = "m_velikova@mc-bg.com",
                            EmailConfirmed = false,
                            FirstName = "Мими",
                            GenderId = 2,
                            JoinOnDate = "26.11.2022",
                            LastName = "Великова",
                            LockoutEnabled = false,
                            NormalizedEmail = "M_VELIKOVA@MC-BG.COM",
                            NormalizedUserName = "M_VELIKOVA",
                            PasswordHash = "AQAAAAEAACcQAAAAEIzz9/jXV6CyZGJe3/ifk00an5gujhNEwVUaJmLBoc/fDVRdZLdJ4qoeyiSZSMvOMQ==",
                            PhoneNumber = "+359888888103",
                            PhoneNumberConfirmed = false,
                            Role = "Doctor",
                            SecurityStamp = "0084a6a2-cce1-4c91-b1fd-960049b1ae7c",
                            TwoFactorEnabled = false,
                            UserName = "m_velikova",
                            Biography = "Това е поредица от латински думи които, както са позиционирани, не образувайте изречения с пълен смисъл, а дайте живот на тестов текст, полезен за запълване на пространства, които впоследствие ще бъдат заети от ad hoc текстове, съставени от комуникационни специалисти. Със сигурност е най -известният заместващ текст дори ако има различни версии, които се различават от реда, в който се повтарят латинските думи. Lorem ipsum съдържа шрифтове , които се използват повече, аспект което ви позволява да имате преглед на изобразяването на текста по отношение на избор на шрифт an d размер на шрифта.",
                            Education = "Когато се отнася до Lorem ipsum, се използват различни изрази, а именно текст за попълване, измислен текст, сляп текст или заместващ текст: накратко, значението му също може да бъде нула, но полезността му е толкова ясна, че да мине през вековете и да устои на ироничните и модерни версии, дошли с появата на мрежата.",
                            Egn = "8707015574",
                            IsOutOfCompany = false,
                            ProfileImageUrl = "https://i.imgur.com/7VzO2Pm.jpg",
                            Representation = "Lorem ipsum dolor sit amet. Графичните и типографските оператори знаят това добре, в действителност всички професии, занимаващи се с комуникационната вселена, имат стабилна връзка с тези думи, но какво е това? Lorem ipsum е фиктивен текст без никакъв смисъл.",
                            SheduleId = 2,
                            SpecialtyId = 8
                        },
                        new
                        {
                            Id = "ecc1a5c4-e551-40b8-9a5a-5672b02dadce",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "fdce7c86-dab4-487a-b007-14bfc0a3a6cf",
                            Email = "t_stoev@mc-bg.com",
                            EmailConfirmed = false,
                            FirstName = "Тодор",
                            GenderId = 1,
                            JoinOnDate = "26.11.2022",
                            LastName = "Стоев",
                            LockoutEnabled = false,
                            NormalizedEmail = "T_STOEV@MC-BG.COM",
                            NormalizedUserName = "T_STOEV",
                            PasswordHash = "AQAAAAEAACcQAAAAEN20Ts6IAM1U2YNgd6XdgTaiXE429oZ/ZMdSGavcGn+pvU0JAPEUmNY4ZLQzKAQkrw==",
                            PhoneNumber = "+359888888104",
                            PhoneNumberConfirmed = false,
                            Role = "Doctor",
                            SecurityStamp = "647a9e47-856b-4833-a850-a0320c0cc566",
                            TwoFactorEnabled = false,
                            UserName = "t_stoev",
                            Biography = "Това е поредица от латински думи които, както са позиционирани, не образувайте изречения с пълен смисъл, а дайте живот на тестов текст, полезен за запълване на пространства, които впоследствие ще бъдат заети от ad hoc текстове, съставени от комуникационни специалисти. Със сигурност е най -известният заместващ текст дори ако има различни версии, които се различават от реда, в който се повтарят латинските думи. Lorem ipsum съдържа шрифтове , които се използват повече, аспект което ви позволява да имате преглед на изобразяването на текста по отношение на избор на шрифт an d размер на шрифта.",
                            Education = "Когато се отнася до Lorem ipsum, се използват различни изрази, а именно текст за попълване, измислен текст, сляп текст или заместващ текст: накратко, значението му също може да бъде нула, но полезността му е толкова ясна, че да мине през вековете и да устои на ироничните и модерни версии, дошли с появата на мрежата.",
                            Egn = "6902251307",
                            IsOutOfCompany = false,
                            ProfileImageUrl = "https://i.imgur.com/oSv4hEn.jpg",
                            Representation = "Lorem ipsum dolor sit amet. Графичните и типографските оператори знаят това добре, в действителност всички професии, занимаващи се с комуникационната вселена, имат стабилна връзка с тези думи, но какво е това? Lorem ipsum е фиктивен текст без никакъв смисъл.",
                            SheduleId = 1,
                            SpecialtyId = 11
                        },
                        new
                        {
                            Id = "cc887dfc-07e0-4f85-9698-58b083c9d203",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "bb790c51-f23c-4f4f-879b-70b6bb56621c",
                            Email = "m_blagoeva@mc-bg.com",
                            EmailConfirmed = false,
                            FirstName = "Мая",
                            GenderId = 2,
                            JoinOnDate = "26.11.2022",
                            LastName = "Благоева",
                            LockoutEnabled = false,
                            NormalizedEmail = "M_BLAGOEVA@MC-BG.COM",
                            NormalizedUserName = "M_BLAGOEVA",
                            PasswordHash = "AQAAAAEAACcQAAAAEE22kr12ilLZULaB2BkjT/q6TBvVhl/6InrnpnGCI4Cxm6Hl4A3r6pqj4BsOaoAx9w==",
                            PhoneNumber = "+359888888105",
                            PhoneNumberConfirmed = false,
                            Role = "Doctor",
                            SecurityStamp = "b975faab-fa9d-4b81-ac2e-425f9e99814f",
                            TwoFactorEnabled = false,
                            UserName = "m_blagoeva",
                            Biography = "Това е поредица от латински думи които, както са позиционирани, не образувайте изречения с пълен смисъл, а дайте живот на тестов текст, полезен за запълване на пространства, които впоследствие ще бъдат заети от ad hoc текстове, съставени от комуникационни специалисти. Със сигурност е най -известният заместващ текст дори ако има различни версии, които се различават от реда, в който се повтарят латинските думи. Lorem ipsum съдържа шрифтове , които се използват повече, аспект което ви позволява да имате преглед на изобразяването на текста по отношение на избор на шрифт an d размер на шрифта.",
                            Education = "Когато се отнася до Lorem ipsum, се използват различни изрази, а именно текст за попълване, измислен текст, сляп текст или заместващ текст: накратко, значението му също може да бъде нула, но полезността му е толкова ясна, че да мине през вековете и да устои на ироничните и модерни версии, дошли с появата на мрежата.",
                            Egn = "7904245096",
                            IsOutOfCompany = false,
                            ProfileImageUrl = "https://i.imgur.com/2xoQC2H.jpg",
                            Representation = "Lorem ipsum dolor sit amet. Графичните и типографските оператори знаят това добре, в действителност всички професии, занимаващи се с комуникационната вселена, имат стабилна връзка с тези думи, но какво е това? Lorem ipsum е фиктивен текст без никакъв смисъл.",
                            SheduleId = 2,
                            SpecialtyId = 11
                        },
                        new
                        {
                            Id = "8942bbd7-6192-4d01-b614-85611032b092",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "c63ef270-d20e-479c-8871-440926807735",
                            Email = "m_kalinkova@mc-bg.com",
                            EmailConfirmed = false,
                            FirstName = "Мария",
                            GenderId = 2,
                            JoinOnDate = "26.11.2022",
                            LastName = "Калинкова",
                            LockoutEnabled = false,
                            NormalizedEmail = "M_KALINKOVA@MC-BG.COM",
                            NormalizedUserName = "M_KALINKOVA",
                            PasswordHash = "AQAAAAEAACcQAAAAELuz0eG6yxE5eN6aIglnO7OyXc83mw+EYK+gPrDP2JTrl1NgrvN117qvFJuYuwD7gQ==",
                            PhoneNumber = "+359888888106",
                            PhoneNumberConfirmed = false,
                            Role = "Doctor",
                            SecurityStamp = "b19418e8-d9eb-4f00-ae24-400da82480ec",
                            TwoFactorEnabled = false,
                            UserName = "m_kalinkova",
                            Biography = "Това е поредица от латински думи които, както са позиционирани, не образувайте изречения с пълен смисъл, а дайте живот на тестов текст, полезен за запълване на пространства, които впоследствие ще бъдат заети от ad hoc текстове, съставени от комуникационни специалисти. Със сигурност е най -известният заместващ текст дори ако има различни версии, които се различават от реда, в който се повтарят латинските думи. Lorem ipsum съдържа шрифтове , които се използват повече, аспект което ви позволява да имате преглед на изобразяването на текста по отношение на избор на шрифт an d размер на шрифта.",
                            Education = "Когато се отнася до Lorem ipsum, се използват различни изрази, а именно текст за попълване, измислен текст, сляп текст или заместващ текст: накратко, значението му също може да бъде нула, но полезността му е толкова ясна, че да мине през вековете и да устои на ироничните и модерни версии, дошли с появата на мрежата.",
                            Egn = "9107227892",
                            IsOutOfCompany = false,
                            ProfileImageUrl = "https://i.imgur.com/yQmifbA.jpg",
                            Representation = "Lorem ipsum dolor sit amet. Графичните и типографските оператори знаят това добре, в действителност всички професии, занимаващи се с комуникационната вселена, имат стабилна връзка с тези думи, но какво е това? Lorem ipsum е фиктивен текст без никакъв смисъл.",
                            SheduleId = 1,
                            SpecialtyId = 24
                        },
                        new
                        {
                            Id = "844bbc19-5543-4c93-8ebe-48bebbda2a3f",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "1139202f-06d0-4c5a-9e1c-580e156a8381",
                            Email = "d_georgiev@mc-bg.com",
                            EmailConfirmed = false,
                            FirstName = "Димитър",
                            GenderId = 1,
                            JoinOnDate = "26.11.2022",
                            LastName = "Георгиев",
                            LockoutEnabled = false,
                            NormalizedEmail = "D_GEORGIEV@MC-BG.COM",
                            NormalizedUserName = "D_GEORGIEV",
                            PasswordHash = "AQAAAAEAACcQAAAAEJFDFVgGPUsb5jnLtRRK5X3codOHh97IhjQXfEB8m34H6m0mKVXsUWG/UGlbvHdQQA==",
                            PhoneNumber = "+359888888107",
                            PhoneNumberConfirmed = false,
                            Role = "Doctor",
                            SecurityStamp = "aebdfe5b-4fa1-44d3-a8c2-1d5bccfd473c",
                            TwoFactorEnabled = false,
                            UserName = "d_georgiev",
                            Biography = "Това е поредица от латински думи които, както са позиционирани, не образувайте изречения с пълен смисъл, а дайте живот на тестов текст, полезен за запълване на пространства, които впоследствие ще бъдат заети от ad hoc текстове, съставени от комуникационни специалисти. Със сигурност е най -известният заместващ текст дори ако има различни версии, които се различават от реда, в който се повтарят латинските думи. Lorem ipsum съдържа шрифтове , които се използват повече, аспект което ви позволява да имате преглед на изобразяването на текста по отношение на избор на шрифт an d размер на шрифта.",
                            Education = "Когато се отнася до Lorem ipsum, се използват различни изрази, а именно текст за попълване, измислен текст, сляп текст или заместващ текст: накратко, значението му също може да бъде нула, но полезността му е толкова ясна, че да мине през вековете и да устои на ироничните и модерни версии, дошли с появата на мрежата.",
                            Egn = "7504196361",
                            IsOutOfCompany = false,
                            ProfileImageUrl = "https://i.imgur.com/62LMUUe.jpg",
                            Representation = "Lorem ipsum dolor sit amet. Графичните и типографските оператори знаят това добре, в действителност всички професии, занимаващи се с комуникационната вселена, имат стабилна връзка с тези думи, но какво е това? Lorem ipsum е фиктивен текст без никакъв смисъл.",
                            SheduleId = 2,
                            SpecialtyId = 24
                        },
                        new
                        {
                            Id = "175669b4-d817-4ffa-be49-bc9d3b1ba989",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "1e30e955-41b7-4c1e-9713-251a5fa769fe",
                            Email = "r_ruseva@mc-bg.com",
                            EmailConfirmed = false,
                            FirstName = "Ралица",
                            GenderId = 2,
                            JoinOnDate = "26.11.2022",
                            LastName = "Русева",
                            LockoutEnabled = false,
                            NormalizedEmail = "R_RUSEVA@MC-BG.COM",
                            NormalizedUserName = "R_RUSEVA",
                            PasswordHash = "AQAAAAEAACcQAAAAEKRteX3F9rCv9z/mpGx4/L/NRv4MgLc9BLjT1VfTiITMLGb6MeMfKGpicbuVAwjPNA==",
                            PhoneNumber = "+359888888108",
                            PhoneNumberConfirmed = false,
                            Role = "Doctor",
                            SecurityStamp = "00954db5-aaad-4b15-b8e9-a8277f979e5a",
                            TwoFactorEnabled = false,
                            UserName = "r_ruseva",
                            Biography = "Това е поредица от латински думи които, както са позиционирани, не образувайте изречения с пълен смисъл, а дайте живот на тестов текст, полезен за запълване на пространства, които впоследствие ще бъдат заети от ad hoc текстове, съставени от комуникационни специалисти. Със сигурност е най -известният заместващ текст дори ако има различни версии, които се различават от реда, в който се повтарят латинските думи. Lorem ipsum съдържа шрифтове , които се използват повече, аспект което ви позволява да имате преглед на изобразяването на текста по отношение на избор на шрифт an d размер на шрифта.",
                            Education = "Когато се отнася до Lorem ipsum, се използват различни изрази, а именно текст за попълване, измислен текст, сляп текст или заместващ текст: накратко, значението му също може да бъде нула, но полезността му е толкова ясна, че да мине през вековете и да устои на ироничните и модерни версии, дошли с появата на мрежата.",
                            Egn = "9401161818",
                            IsOutOfCompany = false,
                            ProfileImageUrl = "https://i.imgur.com/LKNbRcV.jpg",
                            Representation = "Lorem ipsum dolor sit amet. Графичните и типографските оператори знаят това добре, в действителност всички професии, занимаващи се с комуникационната вселена, имат стабилна връзка с тези думи, но какво е това? Lorem ipsum е фиктивен текст без никакъв смисъл.",
                            SheduleId = 1,
                            SpecialtyId = 31
                        },
                        new
                        {
                            Id = "d918bc07-d778-4cce-a106-e1bcb1936834",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "45505dde-8153-4e8c-a3fa-79c6c7563724",
                            Email = "s_tochev@mc-bg.com",
                            EmailConfirmed = false,
                            FirstName = "Сотир",
                            GenderId = 1,
                            JoinOnDate = "26.11.2022",
                            LastName = "Точев",
                            LockoutEnabled = false,
                            NormalizedEmail = "S_TOCHEV@MC-BG.COM",
                            NormalizedUserName = "S_TOCHEV",
                            PasswordHash = "AQAAAAEAACcQAAAAEK1zRq2ZRDPMjbSNJBWB5BHsLutszgpV6n1QvPOChFvIUYOQy47WL3nCytizkxl2rA==",
                            PhoneNumber = "+359888888109",
                            PhoneNumberConfirmed = false,
                            Role = "Doctor",
                            SecurityStamp = "622e4cd8-b4f0-402b-a6f9-be64e4759ff2",
                            TwoFactorEnabled = false,
                            UserName = "s_tochev",
                            Biography = "Това е поредица от латински думи които, както са позиционирани, не образувайте изречения с пълен смисъл, а дайте живот на тестов текст, полезен за запълване на пространства, които впоследствие ще бъдат заети от ad hoc текстове, съставени от комуникационни специалисти. Със сигурност е най -известният заместващ текст дори ако има различни версии, които се различават от реда, в който се повтарят латинските думи. Lorem ipsum съдържа шрифтове , които се използват повече, аспект което ви позволява да имате преглед на изобразяването на текста по отношение на избор на шрифт an d размер на шрифта.",
                            Education = "Когато се отнася до Lorem ipsum, се използват различни изрази, а именно текст за попълване, измислен текст, сляп текст или заместващ текст: накратко, значението му също може да бъде нула, но полезността му е толкова ясна, че да мине през вековете и да устои на ироничните и модерни версии, дошли с появата на мрежата.",
                            Egn = "8112144846",
                            IsOutOfCompany = false,
                            ProfileImageUrl = "https://i.imgur.com/YK3Y8Ya.jpg",
                            Representation = "Lorem ipsum dolor sit amet. Графичните и типографските оператори знаят това добре, в действителност всички професии, занимаващи се с комуникационната вселена, имат стабилна връзка с тези думи, но какво е това? Lorem ipsum е фиктивен текст без никакъв смисъл.",
                            SheduleId = 2,
                            SpecialtyId = 31
                        },
                        new
                        {
                            Id = "376dff86-4ac3-42ae-8ecd-09179501375a",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "d412b64c-375c-4274-b06c-e36b541f324a",
                            Email = "s_atanasova@mc-bg.com",
                            EmailConfirmed = false,
                            FirstName = "Стела",
                            GenderId = 2,
                            JoinOnDate = "26.11.2022",
                            LastName = "Атанасова",
                            LockoutEnabled = false,
                            NormalizedEmail = "S_ATANASOVA@MC-BG.COM",
                            NormalizedUserName = "S_ATANASOVA",
                            PasswordHash = "AQAAAAEAACcQAAAAEMl7/zjiV8qnIUU35xGu6xUe5/S2te8tjcVJtAUUjLSmy5lLYPvxpbKdp+mKvKwXFQ==",
                            PhoneNumber = "+359888888110",
                            PhoneNumberConfirmed = false,
                            Role = "Doctor",
                            SecurityStamp = "43a547ff-b9be-4feb-b687-85bf3f66d0ba",
                            TwoFactorEnabled = false,
                            UserName = "s_atanasova",
                            Biography = "Това е поредица от латински думи които, както са позиционирани, не образувайте изречения с пълен смисъл, а дайте живот на тестов текст, полезен за запълване на пространства, които впоследствие ще бъдат заети от ad hoc текстове, съставени от комуникационни специалисти. Със сигурност е най -известният заместващ текст дори ако има различни версии, които се различават от реда, в който се повтарят латинските думи. Lorem ipsum съдържа шрифтове , които се използват повече, аспект което ви позволява да имате преглед на изобразяването на текста по отношение на избор на шрифт an d размер на шрифта.",
                            Education = "Когато се отнася до Lorem ipsum, се използват различни изрази, а именно текст за попълване, измислен текст, сляп текст или заместващ текст: накратко, значението му също може да бъде нула, но полезността му е толкова ясна, че да мине през вековете и да устои на ироничните и модерни версии, дошли с появата на мрежата.",
                            Egn = "7702262899",
                            IsOutOfCompany = false,
                            ProfileImageUrl = "https://i.imgur.com/oFAixEu.jpg",
                            Representation = "Lorem ipsum dolor sit amet. Графичните и типографските оператори знаят това добре, в действителност всички професии, занимаващи се с комуникационната вселена, имат стабилна връзка с тези думи, но какво е това? Lorem ipsum е фиктивен текст без никакъв смисъл.",
                            SheduleId = 1,
                            SpecialtyId = 44
                        },
                        new
                        {
                            Id = "6af3c0a7-50cd-492f-b442-c3b9580d069b",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "f6e47aa2-9018-471e-982c-9e2f89a8babd",
                            Email = "r_ikonomov@mc-bg.com",
                            EmailConfirmed = false,
                            FirstName = "Росен",
                            GenderId = 1,
                            JoinOnDate = "26.11.2022",
                            LastName = "Икономов",
                            LockoutEnabled = false,
                            NormalizedEmail = "R_IKONOMOV@MC-BG.COM",
                            NormalizedUserName = "R_IKONOMOV",
                            PasswordHash = "AQAAAAEAACcQAAAAEFnYn/FLcr6IVs0icRqyE3zUE+Qg6M2Ykrtxj2tCMajjLQ1Xiowly5wk01AvAhKeGA==",
                            PhoneNumber = "+359888888111",
                            PhoneNumberConfirmed = false,
                            Role = "Doctor",
                            SecurityStamp = "7a9ea548-d5df-4e54-8cdb-9168726a6515",
                            TwoFactorEnabled = false,
                            UserName = "r_ikonomov",
                            Biography = "Това е поредица от латински думи които, както са позиционирани, не образувайте изречения с пълен смисъл, а дайте живот на тестов текст, полезен за запълване на пространства, които впоследствие ще бъдат заети от ad hoc текстове, съставени от комуникационни специалисти. Със сигурност е най -известният заместващ текст дори ако има различни версии, които се различават от реда, в който се повтарят латинските думи. Lorem ipsum съдържа шрифтове , които се използват повече, аспект което ви позволява да имате преглед на изобразяването на текста по отношение на избор на шрифт an d размер на шрифта.",
                            Education = "Когато се отнася до Lorem ipsum, се използват различни изрази, а именно текст за попълване, измислен текст, сляп текст или заместващ текст: накратко, значението му също може да бъде нула, но полезността му е толкова ясна, че да мине през вековете и да устои на ироничните и модерни версии, дошли с появата на мрежата.",
                            Egn = "8707192482",
                            IsOutOfCompany = false,
                            ProfileImageUrl = "https://i.imgur.com/E5Yga61.jpg",
                            Representation = "Lorem ipsum dolor sit amet. Графичните и типографските оператори знаят това добре, в действителност всички професии, занимаващи се с комуникационната вселена, имат стабилна връзка с тези думи, но какво е това? Lorem ipsum е фиктивен текст без никакъв смисъл.",
                            SheduleId = 2,
                            SpecialtyId = 44
                        },
                        new
                        {
                            Id = "5759467e-c4b9-4401-9996-dea77ec90334",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "23a7e7a3-19bc-4924-bde3-41cf162fff0a",
                            Email = "m_vuldjev@mc-bg.com",
                            EmailConfirmed = false,
                            FirstName = "Михаил",
                            GenderId = 1,
                            JoinOnDate = "26.11.2022",
                            LastName = "Вулджев",
                            LockoutEnabled = false,
                            NormalizedEmail = "M_VULDJEV@MC-BG.COM",
                            NormalizedUserName = "M_VULDJEV",
                            PasswordHash = "AQAAAAEAACcQAAAAEKIETN/Cw7R/MKtPhksnIElP8V3MLXU4jij1bra3w9yIuQvmnCQJjzjgGy1ueStxLA==",
                            PhoneNumber = "+359888888112",
                            PhoneNumberConfirmed = false,
                            Role = "Doctor",
                            SecurityStamp = "f38b6208-7300-4fe7-bebd-d713365bbbde",
                            TwoFactorEnabled = false,
                            UserName = "m_vuldjev",
                            Biography = "Това е поредица от латински думи които, както са позиционирани, не образувайте изречения с пълен смисъл, а дайте живот на тестов текст, полезен за запълване на пространства, които впоследствие ще бъдат заети от ad hoc текстове, съставени от комуникационни специалисти. Със сигурност е най -известният заместващ текст дори ако има различни версии, които се различават от реда, в който се повтарят латинските думи. Lorem ipsum съдържа шрифтове , които се използват повече, аспект което ви позволява да имате преглед на изобразяването на текста по отношение на избор на шрифт an d размер на шрифта.",
                            Education = "Когато се отнася до Lorem ipsum, се използват различни изрази, а именно текст за попълване, измислен текст, сляп текст или заместващ текст: накратко, значението му също може да бъде нула, но полезността му е толкова ясна, че да мине през вековете и да устои на ироничните и модерни версии, дошли с появата на мрежата.",
                            Egn = "7512152504",
                            IsOutOfCompany = false,
                            ProfileImageUrl = "https://i.imgur.com/YO1cWgu.jpg",
                            Representation = "Lorem ipsum dolor sit amet. Графичните и типографските оператори знаят това добре, в действителност всички професии, занимаващи се с комуникационната вселена, имат стабилна връзка с тези думи, но какво е това? Lorem ipsum е фиктивен текст без никакъв смисъл.",
                            SheduleId = 1,
                            SpecialtyId = 55
                        },
                        new
                        {
                            Id = "8805ea81-ea7a-4d40-9fc1-191d22340bfc",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "896f3093-e700-47e1-9677-36a3058a5249",
                            Email = "h_hristov@mc-bg.com",
                            EmailConfirmed = false,
                            FirstName = "Христо",
                            GenderId = 1,
                            JoinOnDate = "26.11.2022",
                            LastName = "Христов",
                            LockoutEnabled = false,
                            NormalizedEmail = "H_HRISTOV@MC-BG.COM",
                            NormalizedUserName = "H_HRISTOV",
                            PasswordHash = "AQAAAAEAACcQAAAAEICM9QOc/3NEnIGL6OD0HiEg+SpptMxX1MrFe7oC+/eKG4dNsYqlTKC188lDP8NMBA==",
                            PhoneNumber = "+359888888113",
                            PhoneNumberConfirmed = false,
                            Role = "Doctor",
                            SecurityStamp = "8c69a3a2-5bfd-4a20-9eab-e82d6155e36e",
                            TwoFactorEnabled = false,
                            UserName = "h_hristov",
                            Biography = "Това е поредица от латински думи които, както са позиционирани, не образувайте изречения с пълен смисъл, а дайте живот на тестов текст, полезен за запълване на пространства, които впоследствие ще бъдат заети от ad hoc текстове, съставени от комуникационни специалисти. Със сигурност е най -известният заместващ текст дори ако има различни версии, които се различават от реда, в който се повтарят латинските думи. Lorem ipsum съдържа шрифтове , които се използват повече, аспект което ви позволява да имате преглед на изобразяването на текста по отношение на избор на шрифт an d размер на шрифта.",
                            Education = "Когато се отнася до Lorem ipsum, се използват различни изрази, а именно текст за попълване, измислен текст, сляп текст или заместващ текст: накратко, значението му също може да бъде нула, но полезността му е толкова ясна, че да мине през вековете и да устои на ироничните и модерни версии, дошли с появата на мрежата.",
                            Egn = "7512155144",
                            IsOutOfCompany = false,
                            ProfileImageUrl = "https://i.imgur.com/42rKRT2.jpg",
                            Representation = "Lorem ipsum dolor sit amet. Графичните и типографските оператори знаят това добре, в действителност всички професии, занимаващи се с комуникационната вселена, имат стабилна връзка с тези думи, но какво е това? Lorem ipsum е фиктивен текст без никакъв смисъл.",
                            SheduleId = 2,
                            SpecialtyId = 55
                        },
                        new
                        {
                            Id = "621f586d-b181-4988-9d71-9b01b9449d03",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "3c0797fb-e02c-4d3c-b540-c55af8f97c38",
                            Email = "a_tomova@mc-bg.com",
                            EmailConfirmed = false,
                            FirstName = "Антония",
                            GenderId = 2,
                            JoinOnDate = "26.11.2022",
                            LastName = "Томова",
                            LockoutEnabled = false,
                            NormalizedEmail = "A_TOMOVA@MC-BG.COM",
                            NormalizedUserName = "A_TOMOVA",
                            PasswordHash = "AQAAAAEAACcQAAAAEAyrSJT1UMAmyVvlNualZPsb3hByYCb9Y7RtCLjTG9/efNySlyhj4LEjqB/dAPlLGA==",
                            PhoneNumber = "+359888888114",
                            PhoneNumberConfirmed = false,
                            Role = "Doctor",
                            SecurityStamp = "8c79fe81-fe16-478f-8e7c-64103412010a",
                            TwoFactorEnabled = false,
                            UserName = "a_tomova",
                            Biography = "Това е поредица от латински думи които, както са позиционирани, не образувайте изречения с пълен смисъл, а дайте живот на тестов текст, полезен за запълване на пространства, които впоследствие ще бъдат заети от ad hoc текстове, съставени от комуникационни специалисти. Със сигурност е най -известният заместващ текст дори ако има различни версии, които се различават от реда, в който се повтарят латинските думи. Lorem ipsum съдържа шрифтове , които се използват повече, аспект което ви позволява да имате преглед на изобразяването на текста по отношение на избор на шрифт an d размер на шрифта.",
                            Education = "Когато се отнася до Lorem ipsum, се използват различни изрази, а именно текст за попълване, измислен текст, сляп текст или заместващ текст: накратко, значението му също може да бъде нула, но полезността му е толкова ясна, че да мине през вековете и да устои на ироничните и модерни версии, дошли с появата на мрежата.",
                            Egn = "7411033533",
                            IsOutOfCompany = false,
                            ProfileImageUrl = "https://i.imgur.com/WkPS5Ds.jpg",
                            Representation = "Lorem ipsum dolor sit amet. Графичните и типографските оператори знаят това добре, в действителност всички професии, занимаващи се с комуникационната вселена, имат стабилна връзка с тези думи, но какво е това? Lorem ipsum е фиктивен текст без никакъв смисъл.",
                            SheduleId = 1,
                            SpecialtyId = 60
                        },
                        new
                        {
                            Id = "bca07549-6ac1-4c56-9900-38a8e2ae187e",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "76d892cc-7838-41bf-9d92-2a5607f508d0",
                            Email = "k_moskova@mc-bg.com",
                            EmailConfirmed = false,
                            FirstName = "Катерина",
                            GenderId = 2,
                            JoinOnDate = "26.11.2022",
                            LastName = "Москова",
                            LockoutEnabled = false,
                            NormalizedEmail = "K_MOSKOVA@MC-BG.COM",
                            NormalizedUserName = "K_MOSKOVA",
                            PasswordHash = "AQAAAAEAACcQAAAAEM+NSST5DreC9iiRnv4Zbm2LLE2MF3EFv/jhxRL5/a6907LsFeCe8sk4nAYwfJ14dQ==",
                            PhoneNumber = "+359888888115",
                            PhoneNumberConfirmed = false,
                            Role = "Doctor",
                            SecurityStamp = "22434624-aa03-45f8-9cd6-de0b0d5abbb0",
                            TwoFactorEnabled = false,
                            UserName = "k_moskova",
                            Biography = "Това е поредица от латински думи които, както са позиционирани, не образувайте изречения с пълен смисъл, а дайте живот на тестов текст, полезен за запълване на пространства, които впоследствие ще бъдат заети от ad hoc текстове, съставени от комуникационни специалисти. Със сигурност е най -известният заместващ текст дори ако има различни версии, които се различават от реда, в който се повтарят латинските думи. Lorem ipsum съдържа шрифтове , които се използват повече, аспект което ви позволява да имате преглед на изобразяването на текста по отношение на избор на шрифт an d размер на шрифта.",
                            Education = "Когато се отнася до Lorem ipsum, се използват различни изрази, а именно текст за попълване, измислен текст, сляп текст или заместващ текст: накратко, значението му също може да бъде нула, но полезността му е толкова ясна, че да мине през вековете и да устои на ироничните и модерни версии, дошли с появата на мрежата.",
                            Egn = "7609186138",
                            IsOutOfCompany = false,
                            ProfileImageUrl = "https://i.imgur.com/2HO3b8v.jpg",
                            Representation = "Lorem ipsum dolor sit amet. Графичните и типографските оператори знаят това добре, в действителност всички професии, занимаващи се с комуникационната вселена, имат стабилна връзка с тези думи, но какво е това? Lorem ipsum е фиктивен текст без никакъв смисъл.",
                            SheduleId = 2,
                            SpecialtyId = 60
                        },
                        new
                        {
                            Id = "8cba7a06-5661-4493-9258-f06852fa600b",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "16da8ca1-2368-4b03-bda9-456dc8065466",
                            Email = "k_atanasova@mc-bg.com",
                            EmailConfirmed = false,
                            FirstName = "Кристина",
                            GenderId = 2,
                            JoinOnDate = "26.11.2022",
                            LastName = "Атанасова",
                            LockoutEnabled = false,
                            NormalizedEmail = "K_ATANASOVA@MC-BG.COM",
                            NormalizedUserName = "K_ATANASOVA",
                            PasswordHash = "AQAAAAEAACcQAAAAEDFljT085pZo/5ctltQWc/5fPmy9TsIfV/0VpoKt9hzwsBC4x+juIbY6BYX9kIy+bw==",
                            PhoneNumber = "+359888888116",
                            PhoneNumberConfirmed = false,
                            Role = "Doctor",
                            SecurityStamp = "2d6b72a7-cdd8-4a16-96ef-be36c5603b1a",
                            TwoFactorEnabled = false,
                            UserName = "k_atanasova",
                            Biography = "Това е поредица от латински думи които, както са позиционирани, не образувайте изречения с пълен смисъл, а дайте живот на тестов текст, полезен за запълване на пространства, които впоследствие ще бъдат заети от ad hoc текстове, съставени от комуникационни специалисти. Със сигурност е най -известният заместващ текст дори ако има различни версии, които се различават от реда, в който се повтарят латинските думи. Lorem ipsum съдържа шрифтове , които се използват повече, аспект което ви позволява да имате преглед на изобразяването на текста по отношение на избор на шрифт an d размер на шрифта.",
                            Education = "Когато се отнася до Lorem ipsum, се използват различни изрази, а именно текст за попълване, измислен текст, сляп текст или заместващ текст: накратко, значението му също може да бъде нула, но полезността му е толкова ясна, че да мине през вековете и да устои на ироничните и модерни версии, дошли с появата на мрежата.",
                            Egn = "8606163716",
                            IsOutOfCompany = false,
                            ProfileImageUrl = "https://i.imgur.com/GhnW3gD.jpg",
                            Representation = "Lorem ipsum dolor sit amet. Графичните и типографските оператори знаят това добре, в действителност всички професии, занимаващи се с комуникационната вселена, имат стабилна връзка с тези думи, но какво е това? Lorem ipsum е фиктивен текст без никакъв смисъл.",
                            SheduleId = 1,
                            SpecialtyId = 75
                        },
                        new
                        {
                            Id = "3db948c1-c8db-44e2-86e7-22dbb07ebdc9",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "5b8dfafc-e85c-4e51-8258-3b21858052e4",
                            Email = "g_kuchukov@mc-bg.com",
                            EmailConfirmed = false,
                            FirstName = "Георги",
                            GenderId = 1,
                            JoinOnDate = "26.11.2022",
                            LastName = "Кичуков",
                            LockoutEnabled = false,
                            NormalizedEmail = "G_KUCHUKOV@MC-BG.COM",
                            NormalizedUserName = "G_KUCHUKOV",
                            PasswordHash = "AQAAAAEAACcQAAAAECPNPhIbQj5geS7efQ1efLB/+CHJOrL+YZJd1BAj24C+B6CvzFnHWri2YUffPM8aiw==",
                            PhoneNumber = "+359888888117",
                            PhoneNumberConfirmed = false,
                            Role = "Doctor",
                            SecurityStamp = "cadacf72-b856-4941-a94a-26a6fe114eb6",
                            TwoFactorEnabled = false,
                            UserName = "g_kuchukov",
                            Biography = "Това е поредица от латински думи които, както са позиционирани, не образувайте изречения с пълен смисъл, а дайте живот на тестов текст, полезен за запълване на пространства, които впоследствие ще бъдат заети от ad hoc текстове, съставени от комуникационни специалисти. Със сигурност е най -известният заместващ текст дори ако има различни версии, които се различават от реда, в който се повтарят латинските думи. Lorem ipsum съдържа шрифтове , които се използват повече, аспект което ви позволява да имате преглед на изобразяването на текста по отношение на избор на шрифт an d размер на шрифта.",
                            Education = "Когато се отнася до Lorem ipsum, се използват различни изрази, а именно текст за попълване, измислен текст, сляп текст или заместващ текст: накратко, значението му също може да бъде нула, но полезността му е толкова ясна, че да мине през вековете и да устои на ироничните и модерни версии, дошли с появата на мрежата.",
                            Egn = "9002041303",
                            IsOutOfCompany = false,
                            ProfileImageUrl = "https://i.imgur.com/fkXWOZT.jpg",
                            Representation = "Lorem ipsum dolor sit amet. Графичните и типографските оператори знаят това добре, в действителност всички професии, занимаващи се с комуникационната вселена, имат стабилна връзка с тези думи, но какво е това? Lorem ipsum е фиктивен текст без никакъв смисъл.",
                            SheduleId = 2,
                            SpecialtyId = 75
                        },
                        new
                        {
                            Id = "50fec4aa-3d81-4ace-976a-92a69270665e",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "01d154fa-c46a-408a-ba72-9efbbda2dc64",
                            Email = "k_stoicheva@mc-bg.com",
                            EmailConfirmed = false,
                            FirstName = "Катина",
                            GenderId = 2,
                            JoinOnDate = "26.11.2022",
                            LastName = "Стойчева",
                            LockoutEnabled = false,
                            NormalizedEmail = "K_STOICHEVA@MC-BG.COM",
                            NormalizedUserName = "K_STOICHEVA",
                            PasswordHash = "AQAAAAEAACcQAAAAEPt9tY12kPuBAsSx70ppgMitabxfixzXG1ev5YmJJl0Cgj9/+vSZs8cAp80lU/A0Zg==",
                            PhoneNumber = "+359888888118",
                            PhoneNumberConfirmed = false,
                            Role = "Doctor",
                            SecurityStamp = "55ecfe9e-b2e6-4caa-a655-d87cdc1f8ee5",
                            TwoFactorEnabled = false,
                            UserName = "k_stoicheva",
                            Biography = "Това е поредица от латински думи които, както са позиционирани, не образувайте изречения с пълен смисъл, а дайте живот на тестов текст, полезен за запълване на пространства, които впоследствие ще бъдат заети от ad hoc текстове, съставени от комуникационни специалисти. Със сигурност е най -известният заместващ текст дори ако има различни версии, които се различават от реда, в който се повтарят латинските думи. Lorem ipsum съдържа шрифтове , които се използват повече, аспект което ви позволява да имате преглед на изобразяването на текста по отношение на избор на шрифт an d размер на шрифта.",
                            Education = "Когато се отнася до Lorem ipsum, се използват различни изрази, а именно текст за попълване, измислен текст, сляп текст или заместващ текст: накратко, значението му също може да бъде нула, но полезността му е толкова ясна, че да мине през вековете и да устои на ироничните и модерни версии, дошли с появата на мрежата.",
                            Egn = "7801138974",
                            IsOutOfCompany = false,
                            ProfileImageUrl = "https://i.imgur.com/6NU5RvT.jpg",
                            Representation = "Lorem ipsum dolor sit amet. Графичните и типографските оператори знаят това добре, в действителност всички професии, занимаващи се с комуникационната вселена, имат стабилна връзка с тези думи, но какво е това? Lorem ipsum е фиктивен текст без никакъв смисъл.",
                            SheduleId = 1,
                            SpecialtyId = 76
                        },
                        new
                        {
                            Id = "210a129b-db07-4226-9cf4-11ee66f092e9",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "cf964723-bfcc-48f9-85b2-20ff1ac40b46",
                            Email = "n_paskov@mc-bg.com",
                            EmailConfirmed = false,
                            FirstName = "Николай",
                            GenderId = 1,
                            JoinOnDate = "26.11.2022",
                            LastName = "Пасков",
                            LockoutEnabled = false,
                            NormalizedEmail = "N_PASKOV@MC-BG.COM",
                            NormalizedUserName = "N_PASKOV",
                            PasswordHash = "AQAAAAEAACcQAAAAEBd0jsFyNUTHDXESBU9X1UEqTHMmAdAzV5CaugsV9S6hE0kjf5d+iWv5v4pvle7wnw==",
                            PhoneNumber = "+359888888119",
                            PhoneNumberConfirmed = false,
                            Role = "Doctor",
                            SecurityStamp = "0dbdf86f-ab60-4f0d-bb93-ceb65226a3f6",
                            TwoFactorEnabled = false,
                            UserName = "n_paskov",
                            Biography = "Това е поредица от латински думи които, както са позиционирани, не образувайте изречения с пълен смисъл, а дайте живот на тестов текст, полезен за запълване на пространства, които впоследствие ще бъдат заети от ad hoc текстове, съставени от комуникационни специалисти. Със сигурност е най -известният заместващ текст дори ако има различни версии, които се различават от реда, в който се повтарят латинските думи. Lorem ipsum съдържа шрифтове , които се използват повече, аспект което ви позволява да имате преглед на изобразяването на текста по отношение на избор на шрифт an d размер на шрифта.",
                            Education = "Когато се отнася до Lorem ipsum, се използват различни изрази, а именно текст за попълване, измислен текст, сляп текст или заместващ текст: накратко, значението му също може да бъде нула, но полезността му е толкова ясна, че да мине през вековете и да устои на ироничните и модерни версии, дошли с появата на мрежата.",
                            Egn = "9103145306",
                            IsOutOfCompany = false,
                            ProfileImageUrl = "https://i.imgur.com/f5yYnPN.jpg",
                            Representation = "Lorem ipsum dolor sit amet. Графичните и типографските оператори знаят това добре, в действителност всички професии, занимаващи се с комуникационната вселена, имат стабилна връзка с тези думи, но какво е това? Lorem ipsum е фиктивен текст без никакъв смисъл.",
                            SheduleId = 2,
                            SpecialtyId = 76
                        },
                        new
                        {
                            Id = "a9b5296a-7e2b-41f7-9159-7834fb469ed0",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "bb54f569-e6bd-44c2-bf4c-25e36e34f5f9",
                            Email = "r_uzunova@mc-bg.com",
                            EmailConfirmed = false,
                            FirstName = "Росица",
                            GenderId = 2,
                            JoinOnDate = "26.11.2022",
                            LastName = "Узунова",
                            LockoutEnabled = false,
                            NormalizedEmail = "R_UZUNOVA@MC-BG.COM",
                            NormalizedUserName = "R_UZUNOVA",
                            PasswordHash = "AQAAAAEAACcQAAAAEEBpgQGdB8QvYqqEAcKmQpVDE9nkPCVlIg2t9g8uYJQirBaQ6dLxiDUTUH1EvuGrhQ==",
                            PhoneNumber = "+359888888120",
                            PhoneNumberConfirmed = false,
                            Role = "Doctor",
                            SecurityStamp = "1b776699-f6cf-485f-9231-ddaddf9dd27f",
                            TwoFactorEnabled = false,
                            UserName = "r_uzunova",
                            Biography = "Това е поредица от латински думи които, както са позиционирани, не образувайте изречения с пълен смисъл, а дайте живот на тестов текст, полезен за запълване на пространства, които впоследствие ще бъдат заети от ad hoc текстове, съставени от комуникационни специалисти. Със сигурност е най -известният заместващ текст дори ако има различни версии, които се различават от реда, в който се повтарят латинските думи. Lorem ipsum съдържа шрифтове , които се използват повече, аспект което ви позволява да имате преглед на изобразяването на текста по отношение на избор на шрифт an d размер на шрифта.",
                            Education = "Когато се отнася до Lorem ipsum, се използват различни изрази, а именно текст за попълване, измислен текст, сляп текст или заместващ текст: накратко, значението му също може да бъде нула, но полезността му е толкова ясна, че да мине през вековете и да устои на ироничните и модерни версии, дошли с появата на мрежата.",
                            Egn = "7512158631",
                            IsOutOfCompany = false,
                            ProfileImageUrl = "https://i.imgur.com/hx5EEMp.jpg",
                            Representation = "Lorem ipsum dolor sit amet. Графичните и типографските оператори знаят това добре, в действителност всички професии, занимаващи се с комуникационната вселена, имат стабилна връзка с тези думи, но какво е това? Lorem ipsum е фиктивен текст без никакъв смисъл.",
                            SheduleId = 1,
                            SpecialtyId = 77
                        },
                        new
                        {
                            Id = "0314e169-7bcb-451c-9300-23250e8e7411",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "70bfc440-f759-4109-b353-84b1f7a30cc5",
                            Email = "i_belcheva@mc-bg.com",
                            EmailConfirmed = false,
                            FirstName = "Ирина",
                            GenderId = 2,
                            JoinOnDate = "26.11.2022",
                            LastName = "Белчева",
                            LockoutEnabled = false,
                            NormalizedEmail = "I_BELCHEVA@MC-BG.COM",
                            NormalizedUserName = "I_BELCHEVA",
                            PasswordHash = "AQAAAAEAACcQAAAAEDXcLZhlj/XAct/XL26NBHWP2N9cjGmgO1jquPtlEdSGeeZr0iSK3+lLTvCY70F5Ig==",
                            PhoneNumber = "+359888888121",
                            PhoneNumberConfirmed = false,
                            Role = "Doctor",
                            SecurityStamp = "205afd00-4dd9-48fc-8019-418c3245c58f",
                            TwoFactorEnabled = false,
                            UserName = "i_belcheva",
                            Biography = "Това е поредица от латински думи които, както са позиционирани, не образувайте изречения с пълен смисъл, а дайте живот на тестов текст, полезен за запълване на пространства, които впоследствие ще бъдат заети от ad hoc текстове, съставени от комуникационни специалисти. Със сигурност е най -известният заместващ текст дори ако има различни версии, които се различават от реда, в който се повтарят латинските думи. Lorem ipsum съдържа шрифтове , които се използват повече, аспект което ви позволява да имате преглед на изобразяването на текста по отношение на избор на шрифт an d размер на шрифта.",
                            Education = "Когато се отнася до Lorem ipsum, се използват различни изрази, а именно текст за попълване, измислен текст, сляп текст или заместващ текст: накратко, значението му също може да бъде нула, но полезността му е толкова ясна, че да мине през вековете и да устои на ироничните и модерни версии, дошли с появата на мрежата.",
                            Egn = "7512158992",
                            IsOutOfCompany = false,
                            ProfileImageUrl = "https://i.imgur.com/dj7NvUl.jpg",
                            Representation = "Lorem ipsum dolor sit amet. Графичните и типографските оператори знаят това добре, в действителност всички професии, занимаващи се с комуникационната вселена, имат стабилна връзка с тези думи, но какво е това? Lorem ipsum е фиктивен текст без никакъв смисъл.",
                            SheduleId = 2,
                            SpecialtyId = 77
                        });
                });

            modelBuilder.Entity("MedicalCenter.Infrastructure.Data.Models.Laborant", b =>
                {
                    b.HasBaseType("MedicalCenter.Infrastructure.Data.Models.User");

                    b.Property<string>("Egn")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("Laborant_Egn");

                    b.Property<bool>("IsOutOfCompany")
                        .HasColumnType("bit");

                    b.Property<string>("OutOnDate")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Laborant");

                    b.HasData(
                        new
                        {
                            Id = "2d8d50b4-449f-41e3-aea4-81b4b67a8880",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "a9b0fd11-815e-4a87-a04c-ae38f072257d",
                            Email = "lab_vivanova@mc-bg.com",
                            EmailConfirmed = false,
                            FirstName = "Ваня",
                            GenderId = 2,
                            JoinOnDate = "26.11.2022",
                            LastName = "Иванова",
                            LockoutEnabled = false,
                            NormalizedEmail = "LAB_VIVANOVA@MC-BG.COM",
                            NormalizedUserName = "LAB_VIVANOVA",
                            PasswordHash = "AQAAAAEAACcQAAAAEETzFFIKon16p4J8hronG2sYgPe0VWJLunddA37TVPsLQdiUZLyei2WLfLHQagjP5Q==",
                            PhoneNumber = "+359888888881",
                            PhoneNumberConfirmed = false,
                            Role = "Laborant",
                            SecurityStamp = "2450a86a-ed48-4dea-87d9-9c63f8b2df30",
                            TwoFactorEnabled = false,
                            UserName = "lab_vivanova",
                            Egn = "8412194792",
                            IsOutOfCompany = false
                        });
                });

            modelBuilder.Entity("MedicalCenter.Infrastructure.Data.Models.LaboratoryPatient", b =>
                {
                    b.HasBaseType("MedicalCenter.Infrastructure.Data.Models.User");

                    b.Property<string>("Egn")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasDiscriminator().HasValue("LaboratoryPatient");
                });

            modelBuilder.Entity("MedicalCenter.Infrastructure.Data.Models.Examination", b =>
                {
                    b.HasOne("MedicalCenter.Infrastructure.Data.Models.Doctor", "Doctor")
                        .WithMany("DoctorExaminations")
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MedicalCenter.Infrastructure.Data.Models.Review", "Review")
                        .WithMany()
                        .HasForeignKey("ReviewId");

                    b.HasOne("MedicalCenter.Infrastructure.Data.Models.Shedule", "Shedule")
                        .WithMany()
                        .HasForeignKey("SheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MedicalCenter.Infrastructure.Data.Models.User", "User")
                        .WithMany("UserExaminations")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Doctor");

                    b.Navigation("Review");

                    b.Navigation("Shedule");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MedicalCenter.Infrastructure.Data.Models.Review", b =>
                {
                    b.HasOne("MedicalCenter.Infrastructure.Data.Models.Doctor", "Doctor")
                        .WithMany("DoctorReviews")
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MedicalCenter.Infrastructure.Data.Models.User", "User")
                        .WithMany("UserReviews")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Doctor");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MedicalCenter.Infrastructure.Data.Models.Test", b =>
                {
                    b.HasOne("MedicalCenter.Infrastructure.Data.Models.LaboratoryPatient", "LaboratoryPatient")
                        .WithMany("Tests")
                        .HasForeignKey("LaboratoryPatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LaboratoryPatient");
                });

            modelBuilder.Entity("MedicalCenter.Infrastructure.Data.Models.WorkHour", b =>
                {
                    b.HasOne("MedicalCenter.Infrastructure.Data.Models.Shedule", "Shedule")
                        .WithMany("WorkHours")
                        .HasForeignKey("SheduleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Shedule");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("MedicalCenter.Infrastructure.Data.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("MedicalCenter.Infrastructure.Data.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MedicalCenter.Infrastructure.Data.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("MedicalCenter.Infrastructure.Data.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MedicalCenter.Infrastructure.Data.Models.Doctor", b =>
                {
                    b.HasOne("MedicalCenter.Infrastructure.Data.Models.Shedule", "Shedule")
                        .WithMany("Doctors")
                        .HasForeignKey("SheduleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MedicalCenter.Infrastructure.Data.Models.Specialty", "Specialty")
                        .WithMany("Doctors")
                        .HasForeignKey("SpecialtyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Shedule");

                    b.Navigation("Specialty");
                });

            modelBuilder.Entity("MedicalCenter.Infrastructure.Data.Models.Shedule", b =>
                {
                    b.Navigation("Doctors");

                    b.Navigation("WorkHours");
                });

            modelBuilder.Entity("MedicalCenter.Infrastructure.Data.Models.Specialty", b =>
                {
                    b.Navigation("Doctors");
                });

            modelBuilder.Entity("MedicalCenter.Infrastructure.Data.Models.User", b =>
                {
                    b.Navigation("UserExaminations");

                    b.Navigation("UserReviews");
                });

            modelBuilder.Entity("MedicalCenter.Infrastructure.Data.Models.Doctor", b =>
                {
                    b.Navigation("DoctorExaminations");

                    b.Navigation("DoctorReviews");
                });

            modelBuilder.Entity("MedicalCenter.Infrastructure.Data.Models.LaboratoryPatient", b =>
                {
                    b.Navigation("Tests");
                });
#pragma warning restore 612, 618
        }
    }
}
